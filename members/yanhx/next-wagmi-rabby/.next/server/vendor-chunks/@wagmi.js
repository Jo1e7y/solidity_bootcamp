"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@wagmi";
exports.ids = ["vendor-chunks/@wagmi"];
exports.modules = {

/***/ "(ssr)/./node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/dist/index.cjs.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/dist/index.cjs.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value:!0}));var de=__webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\"),yn=__webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/./node_modules/@stablelib/hkdf/lib/hkdf.js\"),le=__webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\"),W=__webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/./node_modules/@stablelib/sha256/lib/sha256.js\"),hn=__webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/./node_modules/@stablelib/x25519/lib/x25519.js\"),d=__webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/cjs/src/index.js\"),vn=__webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/detect-browser/index.js\"),C=__webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\"),j=__webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\"),En=__webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\"),Nn=__webpack_require__(/*! query-string */ \"(ssr)/./node_modules/@wagmi/connectors/node_modules/query-string/index.js\"),bn=__webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/@walletconnect/relay-api/dist/cjs/index.js\");function pe(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(t){if(t!==\"default\"){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})}}),n.default=e,Object.freeze(n)}var fe=pe(hn),k=pe(Nn);const K=\":\";function me(e){const[n,t]=e.split(K);return{namespace:n,reference:t}}function ge(e){const{namespace:n,reference:t}=e;return[n,t].join(K)}function G(e){const[n,t,r]=e.split(K);return{namespace:n,reference:t,address:r}}function ye(e){const{namespace:n,reference:t,address:r}=e;return[n,t,r].join(K)}function J(e,n){const t=[];return e.forEach(r=>{const s=n(r);t.includes(s)||t.push(s)}),t}function he(e){const{address:n}=G(e);return n}function ve(e){const{namespace:n,reference:t}=G(e);return ge({namespace:n,reference:t})}function On(e,n){const{namespace:t,reference:r}=me(n);return ye({namespace:t,reference:r,address:e})}function Sn(e){return J(e,he)}function Ee(e){return J(e,ve)}function Tn(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const s=e[r];t.push(...s.accounts)}),t}function An(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const s=e[r];t.push(...Ee(s.accounts))}),t}function In(e,n=[]){const t=[];return Object.keys(e).forEach(r=>{if(n.length&&!n.includes(r))return;const s=e[r];t.push(...L(r,s))}),t}function L(e,n){return e.includes(\":\")?[e]:n.chains||[]}const q=e=>e?.split(\":\"),Ne=e=>{const n=e&&q(e);if(n)return n[3]},Pn=e=>{const n=e&&q(e);if(n)return n[2]+\":\"+n[3]},be=e=>{const n=e&&q(e);if(n)return n.pop()},Rn=(e,n)=>{const t=`${e.domain} wants you to sign in with your Ethereum account:`,r=be(n),s=e.statement,o=`URI: ${e.aud}`,i=`Version: ${e.version}`,l=`Chain ID: ${Ne(n)}`,p=`Nonce: ${e.nonce}`,a=`Issued At: ${e.iat}`,u=e.resources&&e.resources.length>0?`Resources:\n${e.resources.map(c=>`- ${c}`).join(`\n`)}`:void 0;return[t,r,\"\",s,\"\",o,i,l,p,a,u].filter(c=>c!=null).join(`\n`)},Q=\"base10\",m=\"base16\",F=\"base64pad\",x=\"utf8\",Z=0,_=1,wn=0,Oe=1,X=12,ee=32;function Cn(){const e=fe.generateKeyPair();return{privateKey:d.toString(e.secretKey,m),publicKey:d.toString(e.publicKey,m)}}function _n(){const e=le.randomBytes(ee);return d.toString(e,m)}function Un(e,n){const t=fe.sharedKey(d.fromString(e,m),d.fromString(n,m),!0),r=new yn.HKDF(W.SHA256,t).expand(ee);return d.toString(r,m)}function jn(e){const n=W.hash(d.fromString(e,m));return d.toString(n,m)}function Vn(e){const n=W.hash(d.fromString(e,x));return d.toString(n,m)}function Se(e){return d.fromString(`${e}`,Q)}function V(e){return Number(d.toString(e,Q))}function Dn(e){const n=Se(typeof e.type<\"u\"?e.type:Z);if(V(n)===_&&typeof e.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");const t=typeof e.senderPublicKey<\"u\"?d.fromString(e.senderPublicKey,m):void 0,r=typeof e.iv<\"u\"?d.fromString(e.iv,m):le.randomBytes(X),s=new de.ChaCha20Poly1305(d.fromString(e.symKey,m)).seal(r,d.fromString(e.message,x));return Te({type:n,sealed:s,iv:r,senderPublicKey:t})}function $n(e){const n=new de.ChaCha20Poly1305(d.fromString(e.symKey,m)),{sealed:t,iv:r}=ne(e.encoded),s=n.open(r,t);if(s===null)throw new Error(\"Failed to decrypt\");return d.toString(s,x)}function Te(e){if(V(e.type)===_){if(typeof e.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");return d.toString(d.concat([e.type,e.senderPublicKey,e.iv,e.sealed]),F)}return d.toString(d.concat([e.type,e.iv,e.sealed]),F)}function ne(e){const n=d.fromString(e,F),t=n.slice(wn,Oe),r=Oe;if(V(t)===_){const l=r+ee,p=l+X,a=n.slice(r,l),u=n.slice(l,p),c=n.slice(p);return{type:t,sealed:c,iv:u,senderPublicKey:a}}const s=r+X,o=n.slice(r,s),i=n.slice(s);return{type:t,sealed:i,iv:o}}function Mn(e,n){const t=ne(e);return Ae({type:V(t.type),senderPublicKey:typeof t.senderPublicKey<\"u\"?d.toString(t.senderPublicKey,m):void 0,receiverPublicKey:n?.receiverPublicKey})}function Ae(e){const n=e?.type||Z;if(n===_){if(typeof e?.senderPublicKey>\"u\")throw new Error(\"missing sender public key\");if(typeof e?.receiverPublicKey>\"u\")throw new Error(\"missing receiver public key\")}return{type:n,senderPublicKey:e?.senderPublicKey,receiverPublicKey:e?.receiverPublicKey}}function kn(e){return e.type===_&&typeof e.senderPublicKey==\"string\"&&typeof e.receiverPublicKey==\"string\"}var Kn=Object.defineProperty,Ie=Object.getOwnPropertySymbols,Ln=Object.prototype.hasOwnProperty,qn=Object.prototype.propertyIsEnumerable,Pe=(e,n,t)=>n in e?Kn(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,Re=(e,n)=>{for(var t in n||(n={}))Ln.call(n,t)&&Pe(e,t,n[t]);if(Ie)for(var t of Ie(n))qn.call(n,t)&&Pe(e,t,n[t]);return e};const we=\"ReactNative\",g={reactNative:\"react-native\",node:\"node\",browser:\"browser\",unknown:\"unknown\"},H=\" \",Fn=\":\",Ce=\"/\",te=2,xn=1e3,_e=\"js\";function re(){return typeof process<\"u\"&&typeof process.versions<\"u\"&&typeof process.versions.node<\"u\"}function D(){return!j.getDocument()&&!!j.getNavigator()&&navigator.product===we}function B(){return!re()&&!!j.getNavigator()}function P(){return D()?g.reactNative:re()?g.node:B()?g.browser:g.unknown}function Ue(e,n){let t=k.parse(e);return t=Re(Re({},t),n),e=k.stringify(t),e}function Hn(){return En.getWindowMetadata()||{name:\"\",description:\"\",url:\"\",icons:[\"\"]}}function Bn(e,n){var t;const r=P(),s={protocol:e,version:n,env:r};return r===\"browser\"&&(s.host=((t=j.getLocation())==null?void 0:t.host)||\"unknown\"),s}function je(){if(P()===g.reactNative&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"){const{OS:t,Version:r}=global.Platform;return[t,r].join(\"-\")}const e=vn.detect();if(e===null)return\"unknown\";const n=e.os?e.os.replace(\" \",\"\").toLowerCase():\"unknown\";return e.type===\"browser\"?[n,e.name,e.version].join(\"-\"):[n,e.version].join(\"-\")}function Ve(){var e;const n=P();return n===g.browser?[n,((e=j.getLocation())==null?void 0:e.host)||\"unknown\"].join(\":\"):n}function De(e,n,t){const r=je(),s=Ve();return[[e,n].join(\"-\"),[_e,t].join(\"-\"),r,s].join(\"/\")}function zn({protocol:e,version:n,relayUrl:t,sdkVersion:r,auth:s,projectId:o,useOnCloseEvent:i}){const l=t.split(\"?\"),p=De(e,n,r),a={auth:s,ua:p,projectId:o,useOnCloseEvent:i||void 0},u=Ue(l[1]||\"\",a);return l[0]+\"?\"+u}function Yn(e){let n=(e.match(/^[^:]+(?=:\\/\\/)/gi)||[])[0];const t=typeof n<\"u\"?e.split(\"://\")[1]:e;return n=n===\"wss\"?\"https\":\"http\",[n,t].join(\"://\")}function Wn(e,n,t){if(!e[n]||typeof e[n]!==t)throw new Error(`Missing or invalid \"${n}\" param`)}function $e(e,n=te){return Me(e.split(Ce),n)}function Gn(e){return $e(e).join(H)}function b(e,n){return e.filter(t=>n.includes(t)).length===e.length}function Me(e,n=te){return e.slice(Math.max(e.length-n,0))}function Jn(e){return Object.fromEntries(e.entries())}function Qn(e){return new Map(Object.entries(e))}function Zn(e,n){const t={};return Object.keys(e).forEach(r=>{t[r]=n(e[r])}),t}const Xn=e=>e;function ke(e){return e.trim().replace(/^\\w/,n=>n.toUpperCase())}function et(e){return e.split(H).map(n=>ke(n)).join(H)}function nt(e=C.FIVE_MINUTES,n){const t=C.toMiliseconds(e||C.FIVE_MINUTES);let r,s,o;return{resolve:i=>{o&&r&&(clearTimeout(o),r(i))},reject:i=>{o&&s&&(clearTimeout(o),s(i))},done:()=>new Promise((i,l)=>{o=setTimeout(()=>{l(new Error(n))},t),r=i,s=l})}}function tt(e,n,t){return new Promise(async(r,s)=>{const o=setTimeout(()=>s(new Error(t)),n);try{const i=await e;r(i)}catch(i){s(i)}clearTimeout(o)})}function se(e,n){if(typeof n==\"string\"&&n.startsWith(`${e}:`))return n;if(e.toLowerCase()===\"topic\"){if(typeof n!=\"string\")throw new Error('Value must be \"string\" for expirer target type: topic');return`topic:${n}`}else if(e.toLowerCase()===\"id\"){if(typeof n!=\"number\")throw new Error('Value must be \"number\" for expirer target type: id');return`id:${n}`}throw new Error(`Unknown expirer target type: ${e}`)}function rt(e){return se(\"topic\",e)}function st(e){return se(\"id\",e)}function ot(e){const[n,t]=e.split(\":\"),r={id:void 0,topic:void 0};if(n===\"topic\"&&typeof t==\"string\")r.topic=t;else if(n===\"id\"&&Number.isInteger(Number(t)))r.id=Number(t);else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);return r}function it(e,n){return C.fromMiliseconds((n||Date.now())+C.toMiliseconds(e))}function at(e){return Date.now()>=C.toMiliseconds(e)}function ct(e,n){return`${e}${n?`:${n}`:\"\"}`}function O(e=[],n=[]){return[...new Set([...e,...n])]}async function ut({id:e,topic:n,wcDeepLink:t}){try{if(!t)return;const r=typeof t==\"string\"?JSON.parse(t):t;let s=r?.href;if(typeof s!=\"string\")return;s.endsWith(\"/\")&&(s=s.slice(0,-1));const o=`${s}/wc?requestId=${e}&sessionTopic=${n}`,i=P();i===g.browser?o.startsWith(\"https://\")?window.open(o,\"_blank\",\"noreferrer noopener\"):window.open(o,\"_self\",\"noreferrer noopener\"):i===g.reactNative&&typeof(global==null?void 0:global.Linking)<\"u\"&&await global.Linking.openURL(o)}catch(r){console.error(r)}}const Ke=\"irn\";function dt(e){return e?.relay||{protocol:Ke}}function lt(e){const n=bn.RELAY_JSONRPC[e];if(typeof n>\"u\")throw new Error(`Relay Protocol not supported: ${e}`);return n}var pt=Object.defineProperty,Le=Object.getOwnPropertySymbols,ft=Object.prototype.hasOwnProperty,mt=Object.prototype.propertyIsEnumerable,qe=(e,n,t)=>n in e?pt(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,gt=(e,n)=>{for(var t in n||(n={}))ft.call(n,t)&&qe(e,t,n[t]);if(Le)for(var t of Le(n))mt.call(n,t)&&qe(e,t,n[t]);return e};function Fe(e,n=\"-\"){const t={},r=\"relay\"+n;return Object.keys(e).forEach(s=>{if(s.startsWith(r)){const o=s.replace(r,\"\"),i=e[s];t[o]=i}}),t}function yt(e){const n=e.indexOf(\":\"),t=e.indexOf(\"?\")!==-1?e.indexOf(\"?\"):void 0,r=e.substring(0,n),s=e.substring(n+1,t).split(\"@\"),o=typeof t<\"u\"?e.substring(t):\"\",i=k.parse(o);return{protocol:r,topic:xe(s[0]),version:parseInt(s[1],10),symKey:i.symKey,relay:Fe(i)}}function xe(e){return e.startsWith(\"//\")?e.substring(2):e}function He(e,n=\"-\"){const t=\"relay\",r={};return Object.keys(e).forEach(s=>{const o=t+n+s;e[s]&&(r[o]=e[s])}),r}function ht(e){return`${e.protocol}:${e.topic}@${e.version}?`+k.stringify(gt({symKey:e.symKey},He(e.relay)))}var vt=Object.defineProperty,Et=Object.defineProperties,Nt=Object.getOwnPropertyDescriptors,Be=Object.getOwnPropertySymbols,bt=Object.prototype.hasOwnProperty,Ot=Object.prototype.propertyIsEnumerable,ze=(e,n,t)=>n in e?vt(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,St=(e,n)=>{for(var t in n||(n={}))bt.call(n,t)&&ze(e,t,n[t]);if(Be)for(var t of Be(n))Ot.call(n,t)&&ze(e,t,n[t]);return e},Tt=(e,n)=>Et(e,Nt(n));function R(e){const n=[];return e.forEach(t=>{const[r,s]=t.split(\":\");n.push(`${r}:${s}`)}),n}function Ye(e){const n=[];return Object.values(e).forEach(t=>{n.push(...R(t.accounts))}),n}function We(e,n){const t=[];return Object.values(e).forEach(r=>{R(r.accounts).includes(n)&&t.push(...r.methods)}),t}function Ge(e,n){const t=[];return Object.values(e).forEach(r=>{R(r.accounts).includes(n)&&t.push(...r.events)}),t}function At(e,n){const t=rn(e,n);if(t)throw new Error(t.message);const r={};for(const[s,o]of Object.entries(e))r[s]={methods:o.methods,events:o.events,chains:o.accounts.map(i=>`${i.split(\":\")[0]}:${i.split(\":\")[1]}`)};return r}function It(e){const{proposal:{requiredNamespaces:n,optionalNamespaces:t={}},supportedNamespaces:r}=e,s=ie(n),o=ie(t),i={};Object.keys(r).forEach(a=>{const u=r[a].chains,c=r[a].methods,E=r[a].events,T=r[a].accounts;u.forEach(y=>{if(!T.some(f=>f.includes(y)))throw new Error(`No accounts provided for chain ${y} in namespace ${a}`)}),i[a]={chains:u,methods:c,events:E,accounts:T}});const l=on(n,i,\"approve()\");if(l)throw new Error(l.message);const p={};return!Object.keys(n).length&&!Object.keys(t).length?i:(Object.keys(s).forEach(a=>{const u=r[a].chains.filter(y=>{var f,v;return(v=(f=s[a])==null?void 0:f.chains)==null?void 0:v.includes(y)}),c=r[a].methods.filter(y=>{var f,v;return(v=(f=s[a])==null?void 0:f.methods)==null?void 0:v.includes(y)}),E=r[a].events.filter(y=>{var f,v;return(v=(f=s[a])==null?void 0:f.events)==null?void 0:v.includes(y)}),T=u.map(y=>r[a].accounts.filter(f=>f.includes(`${y}:`))).flat();p[a]={chains:u,methods:c,events:E,accounts:T}}),Object.keys(o).forEach(a=>{var u,c,E,T,y,f;if(!r[a])return;const v=(c=(u=o[a])==null?void 0:u.chains)==null?void 0:c.filter(A=>r[a].chains.includes(A)),fn=r[a].methods.filter(A=>{var I,U;return(U=(I=o[a])==null?void 0:I.methods)==null?void 0:U.includes(A)}),mn=r[a].events.filter(A=>{var I,U;return(U=(I=o[a])==null?void 0:I.events)==null?void 0:U.includes(A)}),gn=v?.map(A=>r[a].accounts.filter(I=>I.includes(`${A}:`))).flat();p[a]={chains:O((E=p[a])==null?void 0:E.chains,v),methods:O((T=p[a])==null?void 0:T.methods,fn),events:O((y=p[a])==null?void 0:y.events,mn),accounts:O((f=p[a])==null?void 0:f.accounts,gn)}}),p)}function oe(e){return e.includes(\":\")}function Je(e){return oe(e)?e.split(\":\")[0]:e}function ie(e){var n,t,r;const s={};if(!z(e))return s;for(const[o,i]of Object.entries(e)){const l=oe(o)?[o]:i.chains,p=i.methods||[],a=i.events||[],u=Je(o);s[u]=Tt(St({},s[u]),{chains:O(l,(n=s[u])==null?void 0:n.chains),methods:O(p,(t=s[u])==null?void 0:t.methods),events:O(a,(r=s[u])==null?void 0:r.events)})}return s}const Pt={INVALID_METHOD:{message:\"Invalid method.\",code:1001},INVALID_EVENT:{message:\"Invalid event.\",code:1002},INVALID_UPDATE_REQUEST:{message:\"Invalid update request.\",code:1003},INVALID_EXTEND_REQUEST:{message:\"Invalid extend request.\",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:\"Invalid session settle request.\",code:1005},UNAUTHORIZED_METHOD:{message:\"Unauthorized method.\",code:3001},UNAUTHORIZED_EVENT:{message:\"Unauthorized event.\",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:\"Unauthorized update request.\",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:\"Unauthorized extend request.\",code:3004},USER_REJECTED:{message:\"User rejected.\",code:5e3},USER_REJECTED_CHAINS:{message:\"User rejected chains.\",code:5001},USER_REJECTED_METHODS:{message:\"User rejected methods.\",code:5002},USER_REJECTED_EVENTS:{message:\"User rejected events.\",code:5003},UNSUPPORTED_CHAINS:{message:\"Unsupported chains.\",code:5100},UNSUPPORTED_METHODS:{message:\"Unsupported methods.\",code:5101},UNSUPPORTED_EVENTS:{message:\"Unsupported events.\",code:5102},UNSUPPORTED_ACCOUNTS:{message:\"Unsupported accounts.\",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:\"Unsupported namespace key.\",code:5104},USER_DISCONNECTED:{message:\"User disconnected.\",code:6e3},SESSION_SETTLEMENT_FAILED:{message:\"Session settlement failed.\",code:7e3},WC_METHOD_UNSUPPORTED:{message:\"Unsupported wc_ method.\",code:10001}},Rt={NOT_INITIALIZED:{message:\"Not initialized.\",code:1},NO_MATCHING_KEY:{message:\"No matching key.\",code:2},RESTORE_WILL_OVERRIDE:{message:\"Restore will override.\",code:3},RESUBSCRIBED:{message:\"Resubscribed.\",code:4},MISSING_OR_INVALID:{message:\"Missing or invalid.\",code:5},EXPIRED:{message:\"Expired.\",code:6},UNKNOWN_TYPE:{message:\"Unknown type.\",code:7},MISMATCHED_TOPIC:{message:\"Mismatched topic.\",code:8},NON_CONFORMING_NAMESPACES:{message:\"Non conforming namespaces.\",code:9}};function N(e,n){const{message:t,code:r}=Rt[e];return{message:n?`${t} ${n}`:t,code:r}}function w(e,n){const{message:t,code:r}=Pt[e];return{message:n?`${t} ${n}`:t,code:r}}function $(e,n){return Array.isArray(e)?typeof n<\"u\"&&e.length?e.every(n):!0:!1}function z(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.keys(e).length}function S(e){return typeof e>\"u\"}function h(e,n){return n&&S(e)?!0:typeof e==\"string\"&&!!e.trim().length}function Y(e,n){return n&&S(e)?!0:typeof e==\"number\"&&!isNaN(e)}function wt(e,n){const{requiredNamespaces:t}=n,r=Object.keys(e.namespaces),s=Object.keys(t);let o=!0;return b(s,r)?(r.forEach(i=>{const{accounts:l,methods:p,events:a}=e.namespaces[i],u=R(l),c=t[i];(!b(L(i,c),u)||!b(c.methods,p)||!b(c.events,a))&&(o=!1)}),o):!1}function M(e){return h(e,!1)&&e.includes(\":\")?e.split(\":\").length===2:!1}function Qe(e){if(h(e,!1)&&e.includes(\":\")){const n=e.split(\":\");if(n.length===3){const t=n[0]+\":\"+n[1];return!!n[2]&&M(t)}}return!1}function Ct(e){if(h(e,!1))try{return typeof new URL(e)<\"u\"}catch{return!1}return!1}function _t(e){var n;return(n=e?.proposer)==null?void 0:n.publicKey}function Ut(e){return e?.topic}function jt(e,n){let t=null;return h(e?.publicKey,!1)||(t=N(\"MISSING_OR_INVALID\",`${n} controller public key should be a string`)),t}function ae(e){let n=!0;return $(e)?e.length&&(n=e.every(t=>h(t,!1))):n=!1,n}function Ze(e,n,t){let r=null;return $(n)&&n.length?n.forEach(s=>{r||M(s)||(r=w(\"UNSUPPORTED_CHAINS\",`${t}, chain ${s} should be a string and conform to \"namespace:chainId\" format`))}):M(e)||(r=w(\"UNSUPPORTED_CHAINS\",`${t}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)),r}function Xe(e,n,t){let r=null;return Object.entries(e).forEach(([s,o])=>{if(r)return;const i=Ze(s,L(s,o),`${n} ${t}`);i&&(r=i)}),r}function en(e,n){let t=null;return $(e)?e.forEach(r=>{t||Qe(r)||(t=w(\"UNSUPPORTED_ACCOUNTS\",`${n}, account ${r} should be a string and conform to \"namespace:chainId:address\" format`))}):t=w(\"UNSUPPORTED_ACCOUNTS\",`${n}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`),t}function nn(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const s=en(r?.accounts,`${n} namespace`);s&&(t=s)}),t}function tn(e,n){let t=null;return ae(e?.methods)?ae(e?.events)||(t=w(\"UNSUPPORTED_EVENTS\",`${n}, events should be an array of strings or empty array for no events`)):t=w(\"UNSUPPORTED_METHODS\",`${n}, methods should be an array of strings or empty array for no methods`),t}function ce(e,n){let t=null;return Object.values(e).forEach(r=>{if(t)return;const s=tn(r,`${n}, namespace`);s&&(t=s)}),t}function Vt(e,n,t){let r=null;if(e&&z(e)){const s=ce(e,n);s&&(r=s);const o=Xe(e,n,t);o&&(r=o)}else r=N(\"MISSING_OR_INVALID\",`${n}, ${t} should be an object with data`);return r}function rn(e,n){let t=null;if(e&&z(e)){const r=ce(e,n);r&&(t=r);const s=nn(e,n);s&&(t=s)}else t=N(\"MISSING_OR_INVALID\",`${n}, namespaces should be an object with data`);return t}function sn(e){return h(e.protocol,!0)}function Dt(e,n){let t=!1;return n&&!e?t=!0:e&&$(e)&&e.length&&e.forEach(r=>{t=sn(r)}),t}function $t(e){return typeof e==\"number\"}function Mt(e){return typeof e<\"u\"&&typeof e!==null}function kt(e){return!(!e||typeof e!=\"object\"||!e.code||!Y(e.code,!1)||!e.message||!h(e.message,!1))}function Kt(e){return!(S(e)||!h(e.method,!1))}function Lt(e){return!(S(e)||S(e.result)&&S(e.error)||!Y(e.id,!1)||!h(e.jsonrpc,!1))}function qt(e){return!(S(e)||!h(e.name,!1))}function Ft(e,n){return!(!M(n)||!Ye(e).includes(n))}function xt(e,n,t){return h(t,!1)?We(e,n).includes(t):!1}function Ht(e,n,t){return h(t,!1)?Ge(e,n).includes(t):!1}function on(e,n,t){let r=null;const s=Bt(e),o=zt(n),i=Object.keys(s),l=Object.keys(o),p=an(Object.keys(e)),a=an(Object.keys(n)),u=p.filter(c=>!a.includes(c));return u.length&&(r=N(\"NON_CONFORMING_NAMESPACES\",`${t} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${u.toString()}\n      Received: ${Object.keys(n).toString()}`)),b(i,l)||(r=N(\"NON_CONFORMING_NAMESPACES\",`${t} namespaces chains don't satisfy required namespaces.\n      Required: ${i.toString()}\n      Approved: ${l.toString()}`)),Object.keys(n).forEach(c=>{if(!c.includes(\":\")||r)return;const E=R(n[c].accounts);E.includes(c)||(r=N(\"NON_CONFORMING_NAMESPACES\",`${t} namespaces accounts don't satisfy namespace accounts for ${c}\n        Required: ${c}\n        Approved: ${E.toString()}`))}),i.forEach(c=>{r||(b(s[c].methods,o[c].methods)?b(s[c].events,o[c].events)||(r=N(\"NON_CONFORMING_NAMESPACES\",`${t} namespaces events don't satisfy namespace events for ${c}`)):r=N(\"NON_CONFORMING_NAMESPACES\",`${t} namespaces methods don't satisfy namespace methods for ${c}`))}),r}function Bt(e){const n={};return Object.keys(e).forEach(t=>{var r;t.includes(\":\")?n[t]=e[t]:(r=e[t].chains)==null||r.forEach(s=>{n[s]={methods:e[t].methods,events:e[t].events}})}),n}function an(e){return[...new Set(e.map(n=>n.includes(\":\")?n.split(\":\")[0]:n))]}function zt(e){const n={};return Object.keys(e).forEach(t=>{if(t.includes(\":\"))n[t]=e[t];else{const r=R(e[t].accounts);r?.forEach(s=>{n[s]={accounts:e[t].accounts.filter(o=>o.includes(`${s}:`)),methods:e[t].methods,events:e[t].events}})}}),n}function Yt(e,n){return Y(e,!1)&&e<=n.max&&e>=n.min}function Wt(){const e=P();return new Promise(n=>{switch(e){case g.browser:n(cn());break;case g.reactNative:n(un());break;case g.node:n(dn());break;default:n(!0)}})}function cn(){return B()&&navigator?.onLine}async function un(){if(D()&&typeof global<\"u\"&&global!=null&&global.NetInfo){const e=await(global==null?void 0:global.NetInfo.fetch());return e?.isConnected}return!0}function dn(){return!0}function Gt(e){switch(P()){case g.browser:ln(e);break;case g.reactNative:pn(e);break;case g.node:break}}function ln(e){!D()&&B()&&(window.addEventListener(\"online\",()=>e(!0)),window.addEventListener(\"offline\",()=>e(!1)))}function pn(e){D()&&typeof global<\"u\"&&global!=null&&global.NetInfo&&global?.NetInfo.addEventListener(n=>e(n?.isConnected))}const ue={};class Jt{static get(n){return ue[n]}static set(n,t){ue[n]=t}static delete(n){delete ue[n]}}exports.BASE10=Q,exports.BASE16=m,exports.BASE64=F,exports.COLON=Fn,exports.DEFAULT_DEPTH=te,exports.EMPTY_SPACE=H,exports.ENV_MAP=g,exports.MemoryStore=Jt,exports.ONE_THOUSAND=xn,exports.REACT_NATIVE_PRODUCT=we,exports.RELAYER_DEFAULT_PROTOCOL=Ke,exports.SDK_TYPE=_e,exports.SLASH=Ce,exports.TYPE_0=Z,exports.TYPE_1=_,exports.UTF8=x,exports.appendToQueryString=Ue,exports.assertType=Wn,exports.buildApprovedNamespaces=It,exports.calcExpiry=it,exports.capitalize=et,exports.capitalizeWord=ke,exports.createDelayedPromise=nt,exports.createExpiringPromise=tt,exports.decodeTypeByte=V,exports.decrypt=$n,exports.deriveSymKey=Un,exports.deserialize=ne,exports.encodeTypeByte=Se,exports.encrypt=Dn,exports.engineEvent=ct,exports.enumify=Xn,exports.formatAccountId=ye,exports.formatAccountWithChain=On,exports.formatChainId=ge,exports.formatExpirerTarget=se,exports.formatIdTarget=st,exports.formatMessage=Rn,exports.formatMessageContext=Gn,exports.formatRelayParams=He,exports.formatRelayRpcUrl=zn,exports.formatTopicTarget=rt,exports.formatUA=De,exports.formatUri=ht,exports.generateKeyPair=Cn,exports.generateRandomBytes32=_n,exports.getAccountsChains=R,exports.getAccountsFromNamespaces=Tn,exports.getAddressFromAccount=he,exports.getAddressesFromAccounts=Sn,exports.getAppMetadata=Hn,exports.getBrowserOnlineStatus=cn,exports.getChainFromAccount=ve,exports.getChainsFromAccounts=Ee,exports.getChainsFromNamespace=L,exports.getChainsFromNamespaces=An,exports.getChainsFromRequiredNamespaces=In,exports.getDidAddress=be,exports.getDidAddressSegments=q,exports.getDidChainId=Ne,exports.getEnvironment=P,exports.getHttpUrl=Yn,exports.getInternalError=N,exports.getJavascriptID=Ve,exports.getJavascriptOS=je,exports.getLastItems=Me,exports.getNamespacedDidChainId=Pn,exports.getNamespacesChains=Ye,exports.getNamespacesEventsForChainId=Ge,exports.getNamespacesMethodsForChainId=We,exports.getNodeOnlineStatus=dn,exports.getReactNativeOnlineStatus=un,exports.getRelayClientMetadata=Bn,exports.getRelayProtocolApi=lt,exports.getRelayProtocolName=dt,exports.getRequiredNamespacesFromNamespaces=At,exports.getSdkError=w,exports.getUniqueValues=J,exports.handleDeeplinkRedirect=ut,exports.hasOverlap=b,exports.hashKey=jn,exports.hashMessage=Vn,exports.isBrowser=B,exports.isCaipNamespace=oe,exports.isConformingNamespaces=on,exports.isExpired=at,exports.isNode=re,exports.isOnline=Wt,exports.isProposalStruct=_t,exports.isReactNative=D,exports.isSessionCompatible=wt,exports.isSessionStruct=Ut,exports.isTypeOneEnvelope=kn,exports.isUndefined=S,exports.isValidAccountId=Qe,exports.isValidAccounts=en,exports.isValidActions=tn,exports.isValidArray=$,exports.isValidChainId=M,exports.isValidChains=Ze,exports.isValidController=jt,exports.isValidErrorReason=kt,exports.isValidEvent=qt,exports.isValidId=$t,exports.isValidNamespaceAccounts=nn,exports.isValidNamespaceActions=ce,exports.isValidNamespaceChains=Xe,exports.isValidNamespaceMethodsOrEvents=ae,exports.isValidNamespaces=rn,exports.isValidNamespacesChainId=Ft,exports.isValidNamespacesEvent=Ht,exports.isValidNamespacesRequest=xt,exports.isValidNumber=Y,exports.isValidObject=z,exports.isValidParams=Mt,exports.isValidRelay=sn,exports.isValidRelays=Dt,exports.isValidRequest=Kt,exports.isValidRequestExpiry=Yt,exports.isValidRequiredNamespaces=Vt,exports.isValidResponse=Lt,exports.isValidString=h,exports.isValidUrl=Ct,exports.mapEntries=Zn,exports.mapToObj=Jn,exports.mergeArrays=O,exports.normalizeNamespaces=ie,exports.objToMap=Qn,exports.parseAccountId=G,exports.parseChainId=me,exports.parseContextNames=$e,exports.parseExpirerTarget=ot,exports.parseNamespaceKey=Je,exports.parseRelayParams=Fe,exports.parseTopic=xe,exports.parseUri=yt,exports.serialize=Te,exports.subscribeToBrowserNetworkChange=ln,exports.subscribeToNetworkChange=Gt,exports.subscribeToReactNativeNetworkChange=pn,exports.validateDecoding=Mn,exports.validateEncoding=Ae;\n//# sourceMappingURL=index.cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/dist/index.cjs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/node_modules/query-string/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/node_modules/query-string/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"(ssr)/./node_modules/strict-uri-encode/index.js\");\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"(ssr)/./node_modules/decode-uri-component/index.js\");\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"(ssr)/./node_modules/split-on-first/index.js\");\nconst filterObject = __webpack_require__(/*! filter-obj */ \"(ssr)/./node_modules/filter-obj/index.js\");\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/node_modules/query-string/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/chunk-JTELPB65.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/chunk-JTELPB65.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InjectedConnector: () => (/* binding */ InjectedConnector)\n/* harmony export */ });\n/* harmony import */ var _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-UGBGYVBH.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js\");\n/* harmony import */ var _chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-OQILYQDO.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js\");\n/* harmony import */ var _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-W65LBPLT.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createWalletClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\n\n\n// src/injected.ts\n\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum)\n    return \"Injected\";\n  const getName = (provider) => {\n    if (provider.isApexWallet)\n      return \"Apex Wallet\";\n    if (provider.isAvalanche)\n      return \"Core Wallet\";\n    if (provider.isBackpack)\n      return \"Backpack\";\n    if (provider.isBifrost)\n      return \"Bifrost Wallet\";\n    if (provider.isBitKeep)\n      return \"BitKeep\";\n    if (provider.isBitski)\n      return \"Bitski\";\n    if (provider.isBlockWallet)\n      return \"BlockWallet\";\n    if (provider.isBraveWallet)\n      return \"Brave Wallet\";\n    if (provider.isCoin98)\n      return \"Coin98 Wallet\";\n    if (provider.isCoinbaseWallet)\n      return \"Coinbase Wallet\";\n    if (provider.isDawn)\n      return \"Dawn Wallet\";\n    if (provider.isDefiant)\n      return \"Defiant\";\n    if (provider.isDesig)\n      return \"Desig Wallet\";\n    if (provider.isEnkrypt)\n      return \"Enkrypt\";\n    if (provider.isExodus)\n      return \"Exodus\";\n    if (provider.isFordefi)\n      return \"Fordefi\";\n    if (provider.isFrame)\n      return \"Frame\";\n    if (provider.isFrontier)\n      return \"Frontier Wallet\";\n    if (provider.isGamestop)\n      return \"GameStop Wallet\";\n    if (provider.isHaqqWallet)\n      return \"HAQQ Wallet\";\n    if (provider.isHyperPay)\n      return \"HyperPay Wallet\";\n    if (provider.isImToken)\n      return \"ImToken\";\n    if (provider.isHaloWallet)\n      return \"Halo Wallet\";\n    if (provider.isKuCoinWallet)\n      return \"KuCoin Wallet\";\n    if (provider.isMathWallet)\n      return \"MathWallet\";\n    if (provider.isNovaWallet)\n      return \"Nova Wallet\";\n    if (provider.isOkxWallet || provider.isOKExWallet)\n      return \"OKX Wallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\n      return \"1inch Wallet\";\n    if (provider.isOpera)\n      return \"Opera\";\n    if (provider.isPhantom)\n      return \"Phantom\";\n    if (provider.isPortal)\n      return \"Ripio Portal\";\n    if (provider.isRabby)\n      return \"Rabby Wallet\";\n    if (provider.isRainbow)\n      return \"Rainbow\";\n    if (provider.isSafePal)\n      return \"SafePal Wallet\";\n    if (provider.isStatus)\n      return \"Status\";\n    if (provider.isSubWallet)\n      return \"SubWallet\";\n    if (provider.isTalisman)\n      return \"Talisman\";\n    if (provider.isTally)\n      return \"Taho\";\n    if (provider.isTokenPocket)\n      return \"TokenPocket\";\n    if (provider.isTokenary)\n      return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet)\n      return \"Trust Wallet\";\n    if (provider.isTTWallet)\n      return \"TTWallet\";\n    if (provider.isXDEFI)\n      return \"XDEFI Wallet\";\n    if (provider.isZeal)\n      return \"Zeal\";\n    if (provider.isZerion)\n      return \"Zerion\";\n    if (provider.isMetaMask)\n      return \"MetaMask\";\n  };\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */ new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length)\n      return names;\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\n// src/injected.ts\nvar _provider;\nvar InjectedConnector = class extends _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.Connector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      shimDisconnect: true,\n      getProvider() {\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers && ethereum.providers.length > 0)\n          return ethereum.providers[0];\n        return ethereum;\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"injected\";\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _provider, void 0);\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", {\n          account: (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0])\n        });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = (0,_chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId)(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = async (error) => {\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          const isAuthorized = await this.getAccount();\n          if (isAuthorized)\n            return;\n        }\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect)\n        this.storage?.removeItem(this.shimDisconnectKey);\n    };\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\")\n      this.name = options.name;\n    else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name)\n        this.name = options.name(detectedName);\n      else {\n        if (typeof detectedName === \"string\")\n          this.name = detectedName;\n        else\n          this.name = detectedName[0];\n      }\n    } else\n      this.name = \"Injected\";\n    this.ready = !!provider;\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect)\n        this.storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported } };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new viem__WEBPACK_IMPORTED_MODULE_4__.UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new viem__WEBPACK_IMPORTED_MODULE_4__.ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener)\n      return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect)\n      this.storage?.removeItem(this.shimDisconnectKey);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ConnectorNotFoundError();\n    return provider.request({ method: \"eth_chainId\" }).then(_chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider)\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateSet)(this, _provider, provider);\n    return (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return (0,viem__WEBPACK_IMPORTED_MODULE_5__.createWalletClient)({\n      account,\n      chain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_6__.custom)(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey))\n        return false;\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ConnectorNotFoundError();\n    const id = (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId);\n    try {\n      await Promise.all([\n        provider.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: id }]\n        }),\n        new Promise(\n          (res) => this.on(\"change\", ({ chain }) => {\n            if (chain?.id === chainId)\n              res();\n          })\n        )\n      ]);\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ChainNotConfiguredForConnectorError({\n          chainId,\n          connectorId: this.id\n        });\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          const currentChainId = await this.getChainId();\n          if (currentChainId !== chainId)\n            throw new viem__WEBPACK_IMPORTED_MODULE_4__.UserRejectedRequestError(\n              new Error(\"User rejected switch after adding network.\")\n            );\n          return chain;\n        } catch (error2) {\n          throw new viem__WEBPACK_IMPORTED_MODULE_4__.UserRejectedRequestError(error2);\n        }\n      }\n      if (this.isUserRejectedRequestError(error))\n        throw new viem__WEBPACK_IMPORTED_MODULE_4__.UserRejectedRequestError(error);\n      throw new viem__WEBPACK_IMPORTED_MODULE_4__.SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_3__.ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9jaHVuay1KVEVMUEI2NS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFHNkI7QUFHQTtBQU1BOztBQUU3QjtBQVNjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsYUFBYTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0MseURBQVM7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUFJO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxZQUFZLGlCQUFpQjtBQUM3QjtBQUNBLElBQUksZ0VBQVk7QUFDaEIsZ0NBQWdDLFFBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnREFBVTtBQUM3QixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlCQUFpQixvRUFBZ0I7QUFDakM7QUFDQSw0QkFBNEIsU0FBUyxtQkFBbUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixVQUFVLElBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNFQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG9CQUFvQjtBQUNqRDtBQUNBO0FBQ0EsT0FBTztBQUNQLHNCQUFzQixnREFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQyxNQUFNO0FBQ047QUFDQSxrQkFBa0IsMERBQXdCO0FBQzFDO0FBQ0Esa0JBQWtCLDZEQUEyQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzRUFBc0I7QUFDdEM7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXLGdEQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNFQUFzQjtBQUN0Qyw4QkFBOEIsdUJBQXVCLE9BQU8sZ0VBQWdCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxnRUFBWTtBQUNsQixXQUFXLGdFQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLElBQUksSUFBSTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3REFBa0I7QUFDN0I7QUFDQTtBQUNBLGlCQUFpQiw0Q0FBTTtBQUN2QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0VBQXNCO0FBQ3hDO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNFQUFzQjtBQUN0QyxlQUFlLGlEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGFBQWE7QUFDbEMsU0FBUztBQUNUO0FBQ0Esd0NBQXdDLE9BQU87QUFDL0M7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixHQUFHO0FBQzFCLG9CQUFvQixHQUFHO0FBQ3ZCLDBCQUEwQiw0Q0FBNEM7QUFDdEUsbUJBQW1CLFdBQVcsWUFBWSxZQUFZO0FBQ3REO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxrQkFBa0IsbUZBQW1DO0FBQ3JEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLHNCQUFzQiwwREFBd0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLG9CQUFvQiwwREFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDBEQUF3QjtBQUMxQyxnQkFBZ0Isa0RBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQkFBZ0Isc0VBQXNCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC13YWdtaS8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29ubmVjdG9ycy9kaXN0L2NodW5rLUpURUxQQjY1LmpzPzcwMjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhaW5Ob3RDb25maWd1cmVkRm9yQ29ubmVjdG9yRXJyb3IsXG4gIENvbm5lY3Rvck5vdEZvdW5kRXJyb3Jcbn0gZnJvbSBcIi4vY2h1bmstVUdCR1lWQkguanNcIjtcbmltcG9ydCB7XG4gIG5vcm1hbGl6ZUNoYWluSWRcbn0gZnJvbSBcIi4vY2h1bmstT1FJTFlRRE8uanNcIjtcbmltcG9ydCB7XG4gIENvbm5lY3RvcixcbiAgX19wcml2YXRlQWRkLFxuICBfX3ByaXZhdGVHZXQsXG4gIF9fcHJpdmF0ZVNldFxufSBmcm9tIFwiLi9jaHVuay1XNjVMQlBMVC5qc1wiO1xuXG4vLyBzcmMvaW5qZWN0ZWQudHNcbmltcG9ydCB7XG4gIFJlc291cmNlVW5hdmFpbGFibGVScGNFcnJvcixcbiAgU3dpdGNoQ2hhaW5FcnJvcixcbiAgVXNlclJlamVjdGVkUmVxdWVzdEVycm9yLFxuICBjcmVhdGVXYWxsZXRDbGllbnQsXG4gIGN1c3RvbSxcbiAgZ2V0QWRkcmVzcyxcbiAgbnVtYmVyVG9IZXhcbn0gZnJvbSBcInZpZW1cIjtcblxuLy8gc3JjL3V0aWxzL2dldEluamVjdGVkTmFtZS50c1xuZnVuY3Rpb24gZ2V0SW5qZWN0ZWROYW1lKGV0aGVyZXVtKSB7XG4gIGlmICghZXRoZXJldW0pXG4gICAgcmV0dXJuIFwiSW5qZWN0ZWRcIjtcbiAgY29uc3QgZ2V0TmFtZSA9IChwcm92aWRlcikgPT4ge1xuICAgIGlmIChwcm92aWRlci5pc0FwZXhXYWxsZXQpXG4gICAgICByZXR1cm4gXCJBcGV4IFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0F2YWxhbmNoZSlcbiAgICAgIHJldHVybiBcIkNvcmUgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzQmFja3BhY2spXG4gICAgICByZXR1cm4gXCJCYWNrcGFja1wiO1xuICAgIGlmIChwcm92aWRlci5pc0JpZnJvc3QpXG4gICAgICByZXR1cm4gXCJCaWZyb3N0IFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0JpdEtlZXApXG4gICAgICByZXR1cm4gXCJCaXRLZWVwXCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzQml0c2tpKVxuICAgICAgcmV0dXJuIFwiQml0c2tpXCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzQmxvY2tXYWxsZXQpXG4gICAgICByZXR1cm4gXCJCbG9ja1dhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0JyYXZlV2FsbGV0KVxuICAgICAgcmV0dXJuIFwiQnJhdmUgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzQ29pbjk4KVxuICAgICAgcmV0dXJuIFwiQ29pbjk4IFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0NvaW5iYXNlV2FsbGV0KVxuICAgICAgcmV0dXJuIFwiQ29pbmJhc2UgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzRGF3bilcbiAgICAgIHJldHVybiBcIkRhd24gV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzRGVmaWFudClcbiAgICAgIHJldHVybiBcIkRlZmlhbnRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNEZXNpZylcbiAgICAgIHJldHVybiBcIkRlc2lnIFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0Vua3J5cHQpXG4gICAgICByZXR1cm4gXCJFbmtyeXB0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzRXhvZHVzKVxuICAgICAgcmV0dXJuIFwiRXhvZHVzXCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzRm9yZGVmaSlcbiAgICAgIHJldHVybiBcIkZvcmRlZmlcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNGcmFtZSlcbiAgICAgIHJldHVybiBcIkZyYW1lXCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzRnJvbnRpZXIpXG4gICAgICByZXR1cm4gXCJGcm9udGllciBXYWxsZXRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNHYW1lc3RvcClcbiAgICAgIHJldHVybiBcIkdhbWVTdG9wIFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0hhcXFXYWxsZXQpXG4gICAgICByZXR1cm4gXCJIQVFRIFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc0h5cGVyUGF5KVxuICAgICAgcmV0dXJuIFwiSHlwZXJQYXkgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzSW1Ub2tlbilcbiAgICAgIHJldHVybiBcIkltVG9rZW5cIjtcbiAgICBpZiAocHJvdmlkZXIuaXNIYWxvV2FsbGV0KVxuICAgICAgcmV0dXJuIFwiSGFsbyBXYWxsZXRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNLdUNvaW5XYWxsZXQpXG4gICAgICByZXR1cm4gXCJLdUNvaW4gV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzTWF0aFdhbGxldClcbiAgICAgIHJldHVybiBcIk1hdGhXYWxsZXRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNOb3ZhV2FsbGV0KVxuICAgICAgcmV0dXJuIFwiTm92YSBXYWxsZXRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNPa3hXYWxsZXQgfHwgcHJvdmlkZXIuaXNPS0V4V2FsbGV0KVxuICAgICAgcmV0dXJuIFwiT0tYIFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc09uZUluY2hJT1NXYWxsZXQgfHwgcHJvdmlkZXIuaXNPbmVJbmNoQW5kcm9pZFdhbGxldClcbiAgICAgIHJldHVybiBcIjFpbmNoIFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc09wZXJhKVxuICAgICAgcmV0dXJuIFwiT3BlcmFcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNQaGFudG9tKVxuICAgICAgcmV0dXJuIFwiUGhhbnRvbVwiO1xuICAgIGlmIChwcm92aWRlci5pc1BvcnRhbClcbiAgICAgIHJldHVybiBcIlJpcGlvIFBvcnRhbFwiO1xuICAgIGlmIChwcm92aWRlci5pc1JhYmJ5KVxuICAgICAgcmV0dXJuIFwiUmFiYnkgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzUmFpbmJvdylcbiAgICAgIHJldHVybiBcIlJhaW5ib3dcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNTYWZlUGFsKVxuICAgICAgcmV0dXJuIFwiU2FmZVBhbCBXYWxsZXRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNTdGF0dXMpXG4gICAgICByZXR1cm4gXCJTdGF0dXNcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNTdWJXYWxsZXQpXG4gICAgICByZXR1cm4gXCJTdWJXYWxsZXRcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNUYWxpc21hbilcbiAgICAgIHJldHVybiBcIlRhbGlzbWFuXCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzVGFsbHkpXG4gICAgICByZXR1cm4gXCJUYWhvXCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzVG9rZW5Qb2NrZXQpXG4gICAgICByZXR1cm4gXCJUb2tlblBvY2tldFwiO1xuICAgIGlmIChwcm92aWRlci5pc1Rva2VuYXJ5KVxuICAgICAgcmV0dXJuIFwiVG9rZW5hcnlcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNUcnVzdCB8fCBwcm92aWRlci5pc1RydXN0V2FsbGV0KVxuICAgICAgcmV0dXJuIFwiVHJ1c3QgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzVFRXYWxsZXQpXG4gICAgICByZXR1cm4gXCJUVFdhbGxldFwiO1xuICAgIGlmIChwcm92aWRlci5pc1hERUZJKVxuICAgICAgcmV0dXJuIFwiWERFRkkgV2FsbGV0XCI7XG4gICAgaWYgKHByb3ZpZGVyLmlzWmVhbClcbiAgICAgIHJldHVybiBcIlplYWxcIjtcbiAgICBpZiAocHJvdmlkZXIuaXNaZXJpb24pXG4gICAgICByZXR1cm4gXCJaZXJpb25cIjtcbiAgICBpZiAocHJvdmlkZXIuaXNNZXRhTWFzaylcbiAgICAgIHJldHVybiBcIk1ldGFNYXNrXCI7XG4gIH07XG4gIGlmIChldGhlcmV1bS5wcm92aWRlcnM/Lmxlbmd0aCkge1xuICAgIGNvbnN0IG5hbWVTZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICAgIGxldCB1bmtub3duQ291bnQgPSAxO1xuICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgZXRoZXJldW0ucHJvdmlkZXJzKSB7XG4gICAgICBsZXQgbmFtZSA9IGdldE5hbWUocHJvdmlkZXIpO1xuICAgICAgaWYgKCFuYW1lKSB7XG4gICAgICAgIG5hbWUgPSBgVW5rbm93biBXYWxsZXQgIyR7dW5rbm93bkNvdW50fWA7XG4gICAgICAgIHVua25vd25Db3VudCArPSAxO1xuICAgICAgfVxuICAgICAgbmFtZVNldC5hZGQobmFtZSk7XG4gICAgfVxuICAgIGNvbnN0IG5hbWVzID0gWy4uLm5hbWVTZXRdO1xuICAgIGlmIChuYW1lcy5sZW5ndGgpXG4gICAgICByZXR1cm4gbmFtZXM7XG4gICAgcmV0dXJuIG5hbWVzWzBdID8/IFwiSW5qZWN0ZWRcIjtcbiAgfVxuICByZXR1cm4gZ2V0TmFtZShldGhlcmV1bSkgPz8gXCJJbmplY3RlZFwiO1xufVxuXG4vLyBzcmMvaW5qZWN0ZWQudHNcbnZhciBfcHJvdmlkZXI7XG52YXIgSW5qZWN0ZWRDb25uZWN0b3IgPSBjbGFzcyBleHRlbmRzIENvbm5lY3RvciB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICBjaGFpbnMsXG4gICAgb3B0aW9uczogb3B0aW9uc19cbiAgfSA9IHt9KSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIHNoaW1EaXNjb25uZWN0OiB0cnVlLFxuICAgICAgZ2V0UHJvdmlkZXIoKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgZXRoZXJldW0gPSB3aW5kb3cuZXRoZXJldW07XG4gICAgICAgIGlmIChldGhlcmV1bT8ucHJvdmlkZXJzICYmIGV0aGVyZXVtLnByb3ZpZGVycy5sZW5ndGggPiAwKVxuICAgICAgICAgIHJldHVybiBldGhlcmV1bS5wcm92aWRlcnNbMF07XG4gICAgICAgIHJldHVybiBldGhlcmV1bTtcbiAgICAgIH0sXG4gICAgICAuLi5vcHRpb25zX1xuICAgIH07XG4gICAgc3VwZXIoeyBjaGFpbnMsIG9wdGlvbnMgfSk7XG4gICAgdGhpcy5pZCA9IFwiaW5qZWN0ZWRcIjtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX3Byb3ZpZGVyLCB2b2lkIDApO1xuICAgIHRoaXMuc2hpbURpc2Nvbm5lY3RLZXkgPSBgJHt0aGlzLmlkfS5zaGltRGlzY29ubmVjdGA7XG4gICAgdGhpcy5vbkFjY291bnRzQ2hhbmdlZCA9IChhY2NvdW50cykgPT4ge1xuICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgdGhpcy5lbWl0KFwiZGlzY29ubmVjdFwiKTtcbiAgICAgIGVsc2VcbiAgICAgICAgdGhpcy5lbWl0KFwiY2hhbmdlXCIsIHtcbiAgICAgICAgICBhY2NvdW50OiBnZXRBZGRyZXNzKGFjY291bnRzWzBdKVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHRoaXMub25DaGFpbkNoYW5nZWQgPSAoY2hhaW5JZCkgPT4ge1xuICAgICAgY29uc3QgaWQgPSBub3JtYWxpemVDaGFpbklkKGNoYWluSWQpO1xuICAgICAgY29uc3QgdW5zdXBwb3J0ZWQgPSB0aGlzLmlzQ2hhaW5VbnN1cHBvcnRlZChpZCk7XG4gICAgICB0aGlzLmVtaXQoXCJjaGFuZ2VcIiwgeyBjaGFpbjogeyBpZCwgdW5zdXBwb3J0ZWQgfSB9KTtcbiAgICB9O1xuICAgIHRoaXMub25EaXNjb25uZWN0ID0gYXN5bmMgKGVycm9yKSA9PiB7XG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gMTAxMykge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICAgICAgaWYgKHByb3ZpZGVyKSB7XG4gICAgICAgICAgY29uc3QgaXNBdXRob3JpemVkID0gYXdhaXQgdGhpcy5nZXRBY2NvdW50KCk7XG4gICAgICAgICAgaWYgKGlzQXV0aG9yaXplZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy5lbWl0KFwiZGlzY29ubmVjdFwiKTtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hpbURpc2Nvbm5lY3QpXG4gICAgICAgIHRoaXMuc3RvcmFnZT8ucmVtb3ZlSXRlbSh0aGlzLnNoaW1EaXNjb25uZWN0S2V5KTtcbiAgICB9O1xuICAgIGNvbnN0IHByb3ZpZGVyID0gb3B0aW9ucy5nZXRQcm92aWRlcigpO1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5uYW1lID09PSBcInN0cmluZ1wiKVxuICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lO1xuICAgIGVsc2UgaWYgKHByb3ZpZGVyKSB7XG4gICAgICBjb25zdCBkZXRlY3RlZE5hbWUgPSBnZXRJbmplY3RlZE5hbWUocHJvdmlkZXIpO1xuICAgICAgaWYgKG9wdGlvbnMubmFtZSlcbiAgICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lKGRldGVjdGVkTmFtZSk7XG4gICAgICBlbHNlIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkZXRlY3RlZE5hbWUgPT09IFwic3RyaW5nXCIpXG4gICAgICAgICAgdGhpcy5uYW1lID0gZGV0ZWN0ZWROYW1lO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgdGhpcy5uYW1lID0gZGV0ZWN0ZWROYW1lWzBdO1xuICAgICAgfVxuICAgIH0gZWxzZVxuICAgICAgdGhpcy5uYW1lID0gXCJJbmplY3RlZFwiO1xuICAgIHRoaXMucmVhZHkgPSAhIXByb3ZpZGVyO1xuICB9XG4gIGFzeW5jIGNvbm5lY3QoeyBjaGFpbklkIH0gPSB7fSkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICAgIGlmICghcHJvdmlkZXIpXG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0b3JOb3RGb3VuZEVycm9yKCk7XG4gICAgICBpZiAocHJvdmlkZXIub24pIHtcbiAgICAgICAgcHJvdmlkZXIub24oXCJhY2NvdW50c0NoYW5nZWRcIiwgdGhpcy5vbkFjY291bnRzQ2hhbmdlZCk7XG4gICAgICAgIHByb3ZpZGVyLm9uKFwiY2hhaW5DaGFuZ2VkXCIsIHRoaXMub25DaGFpbkNoYW5nZWQpO1xuICAgICAgICBwcm92aWRlci5vbihcImRpc2Nvbm5lY3RcIiwgdGhpcy5vbkRpc2Nvbm5lY3QpO1xuICAgICAgfVxuICAgICAgdGhpcy5lbWl0KFwibWVzc2FnZVwiLCB7IHR5cGU6IFwiY29ubmVjdGluZ1wiIH0pO1xuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBwcm92aWRlci5yZXF1ZXN0KHtcbiAgICAgICAgbWV0aG9kOiBcImV0aF9yZXF1ZXN0QWNjb3VudHNcIlxuICAgICAgfSk7XG4gICAgICBjb25zdCBhY2NvdW50ID0gZ2V0QWRkcmVzcyhhY2NvdW50c1swXSk7XG4gICAgICBsZXQgaWQgPSBhd2FpdCB0aGlzLmdldENoYWluSWQoKTtcbiAgICAgIGxldCB1bnN1cHBvcnRlZCA9IHRoaXMuaXNDaGFpblVuc3VwcG9ydGVkKGlkKTtcbiAgICAgIGlmIChjaGFpbklkICYmIGlkICE9PSBjaGFpbklkKSB7XG4gICAgICAgIGNvbnN0IGNoYWluID0gYXdhaXQgdGhpcy5zd2l0Y2hDaGFpbihjaGFpbklkKTtcbiAgICAgICAgaWQgPSBjaGFpbi5pZDtcbiAgICAgICAgdW5zdXBwb3J0ZWQgPSB0aGlzLmlzQ2hhaW5VbnN1cHBvcnRlZChpZCk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNoaW1EaXNjb25uZWN0KVxuICAgICAgICB0aGlzLnN0b3JhZ2U/LnNldEl0ZW0odGhpcy5zaGltRGlzY29ubmVjdEtleSwgdHJ1ZSk7XG4gICAgICByZXR1cm4geyBhY2NvdW50LCBjaGFpbjogeyBpZCwgdW5zdXBwb3J0ZWQgfSB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBpZiAodGhpcy5pc1VzZXJSZWplY3RlZFJlcXVlc3RFcnJvcihlcnJvcikpXG4gICAgICAgIHRocm93IG5ldyBVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IoZXJyb3IpO1xuICAgICAgaWYgKGVycm9yLmNvZGUgPT09IC0zMjAwMilcbiAgICAgICAgdGhyb3cgbmV3IFJlc291cmNlVW5hdmFpbGFibGVScGNFcnJvcihlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cbiAgYXN5bmMgZGlzY29ubmVjdCgpIHtcbiAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICBpZiAoIXByb3ZpZGVyPy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgIHJldHVybjtcbiAgICBwcm92aWRlci5yZW1vdmVMaXN0ZW5lcihcImFjY291bnRzQ2hhbmdlZFwiLCB0aGlzLm9uQWNjb3VudHNDaGFuZ2VkKTtcbiAgICBwcm92aWRlci5yZW1vdmVMaXN0ZW5lcihcImNoYWluQ2hhbmdlZFwiLCB0aGlzLm9uQ2hhaW5DaGFuZ2VkKTtcbiAgICBwcm92aWRlci5yZW1vdmVMaXN0ZW5lcihcImRpc2Nvbm5lY3RcIiwgdGhpcy5vbkRpc2Nvbm5lY3QpO1xuICAgIGlmICh0aGlzLm9wdGlvbnMuc2hpbURpc2Nvbm5lY3QpXG4gICAgICB0aGlzLnN0b3JhZ2U/LnJlbW92ZUl0ZW0odGhpcy5zaGltRGlzY29ubmVjdEtleSk7XG4gIH1cbiAgYXN5bmMgZ2V0QWNjb3VudCgpIHtcbiAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICBpZiAoIXByb3ZpZGVyKVxuICAgICAgdGhyb3cgbmV3IENvbm5lY3Rvck5vdEZvdW5kRXJyb3IoKTtcbiAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHByb3ZpZGVyLnJlcXVlc3Qoe1xuICAgICAgbWV0aG9kOiBcImV0aF9hY2NvdW50c1wiXG4gICAgfSk7XG4gICAgcmV0dXJuIGdldEFkZHJlc3MoYWNjb3VudHNbMF0pO1xuICB9XG4gIGFzeW5jIGdldENoYWluSWQoKSB7XG4gICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKCk7XG4gICAgaWYgKCFwcm92aWRlcilcbiAgICAgIHRocm93IG5ldyBDb25uZWN0b3JOb3RGb3VuZEVycm9yKCk7XG4gICAgcmV0dXJuIHByb3ZpZGVyLnJlcXVlc3QoeyBtZXRob2Q6IFwiZXRoX2NoYWluSWRcIiB9KS50aGVuKG5vcm1hbGl6ZUNoYWluSWQpO1xuICB9XG4gIGFzeW5jIGdldFByb3ZpZGVyKCkge1xuICAgIGNvbnN0IHByb3ZpZGVyID0gdGhpcy5vcHRpb25zLmdldFByb3ZpZGVyKCk7XG4gICAgaWYgKHByb3ZpZGVyKVxuICAgICAgX19wcml2YXRlU2V0KHRoaXMsIF9wcm92aWRlciwgcHJvdmlkZXIpO1xuICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX3Byb3ZpZGVyKTtcbiAgfVxuICBhc3luYyBnZXRXYWxsZXRDbGllbnQoe1xuICAgIGNoYWluSWRcbiAgfSA9IHt9KSB7XG4gICAgY29uc3QgW3Byb3ZpZGVyLCBhY2NvdW50XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIHRoaXMuZ2V0UHJvdmlkZXIoKSxcbiAgICAgIHRoaXMuZ2V0QWNjb3VudCgpXG4gICAgXSk7XG4gICAgY29uc3QgY2hhaW4gPSB0aGlzLmNoYWlucy5maW5kKCh4KSA9PiB4LmlkID09PSBjaGFpbklkKTtcbiAgICBpZiAoIXByb3ZpZGVyKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwicHJvdmlkZXIgaXMgcmVxdWlyZWQuXCIpO1xuICAgIHJldHVybiBjcmVhdGVXYWxsZXRDbGllbnQoe1xuICAgICAgYWNjb3VudCxcbiAgICAgIGNoYWluLFxuICAgICAgdHJhbnNwb3J0OiBjdXN0b20ocHJvdmlkZXIpXG4gICAgfSk7XG4gIH1cbiAgYXN5bmMgaXNBdXRob3JpemVkKCkge1xuICAgIHRyeSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNoaW1EaXNjb25uZWN0ICYmICF0aGlzLnN0b3JhZ2U/LmdldEl0ZW0odGhpcy5zaGltRGlzY29ubmVjdEtleSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpO1xuICAgICAgaWYgKCFwcm92aWRlcilcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3Rvck5vdEZvdW5kRXJyb3IoKTtcbiAgICAgIGNvbnN0IGFjY291bnQgPSBhd2FpdCB0aGlzLmdldEFjY291bnQoKTtcbiAgICAgIHJldHVybiAhIWFjY291bnQ7XG4gICAgfSBjYXRjaCB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGFzeW5jIHN3aXRjaENoYWluKGNoYWluSWQpIHtcbiAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICBpZiAoIXByb3ZpZGVyKVxuICAgICAgdGhyb3cgbmV3IENvbm5lY3Rvck5vdEZvdW5kRXJyb3IoKTtcbiAgICBjb25zdCBpZCA9IG51bWJlclRvSGV4KGNoYWluSWQpO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIHByb3ZpZGVyLnJlcXVlc3Qoe1xuICAgICAgICAgIG1ldGhvZDogXCJ3YWxsZXRfc3dpdGNoRXRoZXJldW1DaGFpblwiLFxuICAgICAgICAgIHBhcmFtczogW3sgY2hhaW5JZDogaWQgfV1cbiAgICAgICAgfSksXG4gICAgICAgIG5ldyBQcm9taXNlKFxuICAgICAgICAgIChyZXMpID0+IHRoaXMub24oXCJjaGFuZ2VcIiwgKHsgY2hhaW4gfSkgPT4ge1xuICAgICAgICAgICAgaWYgKGNoYWluPy5pZCA9PT0gY2hhaW5JZClcbiAgICAgICAgICAgICAgcmVzKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgXSk7XG4gICAgICByZXR1cm4gdGhpcy5jaGFpbnMuZmluZCgoeCkgPT4geC5pZCA9PT0gY2hhaW5JZCkgPz8ge1xuICAgICAgICBpZDogY2hhaW5JZCxcbiAgICAgICAgbmFtZTogYENoYWluICR7aWR9YCxcbiAgICAgICAgbmV0d29yazogYCR7aWR9YCxcbiAgICAgICAgbmF0aXZlQ3VycmVuY3k6IHsgbmFtZTogXCJFdGhlclwiLCBkZWNpbWFsczogMTgsIHN5bWJvbDogXCJFVEhcIiB9LFxuICAgICAgICBycGNVcmxzOiB7IGRlZmF1bHQ6IHsgaHR0cDogW1wiXCJdIH0sIHB1YmxpYzogeyBodHRwOiBbXCJcIl0gfSB9XG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zdCBjaGFpbiA9IHRoaXMuY2hhaW5zLmZpbmQoKHgpID0+IHguaWQgPT09IGNoYWluSWQpO1xuICAgICAgaWYgKCFjaGFpbilcbiAgICAgICAgdGhyb3cgbmV3IENoYWluTm90Q29uZmlndXJlZEZvckNvbm5lY3RvckVycm9yKHtcbiAgICAgICAgICBjaGFpbklkLFxuICAgICAgICAgIGNvbm5lY3RvcklkOiB0aGlzLmlkXG4gICAgICAgIH0pO1xuICAgICAgaWYgKGVycm9yLmNvZGUgPT09IDQ5MDIgfHwgZXJyb3I/LmRhdGE/Lm9yaWdpbmFsRXJyb3I/LmNvZGUgPT09IDQ5MDIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBhd2FpdCBwcm92aWRlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJ3YWxsZXRfYWRkRXRoZXJldW1DaGFpblwiLFxuICAgICAgICAgICAgcGFyYW1zOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBpZCxcbiAgICAgICAgICAgICAgICBjaGFpbk5hbWU6IGNoYWluLm5hbWUsXG4gICAgICAgICAgICAgICAgbmF0aXZlQ3VycmVuY3k6IGNoYWluLm5hdGl2ZUN1cnJlbmN5LFxuICAgICAgICAgICAgICAgIHJwY1VybHM6IFtjaGFpbi5ycGNVcmxzLnB1YmxpYz8uaHR0cFswXSA/PyBcIlwiXSxcbiAgICAgICAgICAgICAgICBibG9ja0V4cGxvcmVyVXJsczogdGhpcy5nZXRCbG9ja0V4cGxvcmVyVXJscyhjaGFpbilcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnRDaGFpbklkID0gYXdhaXQgdGhpcy5nZXRDaGFpbklkKCk7XG4gICAgICAgICAgaWYgKGN1cnJlbnRDaGFpbklkICE9PSBjaGFpbklkKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcihcbiAgICAgICAgICAgICAgbmV3IEVycm9yKFwiVXNlciByZWplY3RlZCBzd2l0Y2ggYWZ0ZXIgYWRkaW5nIG5ldHdvcmsuXCIpXG4gICAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiBjaGFpbjtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IyKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcihlcnJvcjIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5pc1VzZXJSZWplY3RlZFJlcXVlc3RFcnJvcihlcnJvcikpXG4gICAgICAgIHRocm93IG5ldyBVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IoZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IFN3aXRjaENoYWluRXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgfVxuICBhc3luYyB3YXRjaEFzc2V0KHtcbiAgICBhZGRyZXNzLFxuICAgIGRlY2ltYWxzID0gMTgsXG4gICAgaW1hZ2UsXG4gICAgc3ltYm9sXG4gIH0pIHtcbiAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICBpZiAoIXByb3ZpZGVyKVxuICAgICAgdGhyb3cgbmV3IENvbm5lY3Rvck5vdEZvdW5kRXJyb3IoKTtcbiAgICByZXR1cm4gcHJvdmlkZXIucmVxdWVzdCh7XG4gICAgICBtZXRob2Q6IFwid2FsbGV0X3dhdGNoQXNzZXRcIixcbiAgICAgIHBhcmFtczoge1xuICAgICAgICB0eXBlOiBcIkVSQzIwXCIsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgIGRlY2ltYWxzLFxuICAgICAgICAgIGltYWdlLFxuICAgICAgICAgIHN5bWJvbFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgaXNVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3IuY29kZSA9PT0gNDAwMTtcbiAgfVxufTtcbl9wcm92aWRlciA9IG5ldyBXZWFrTWFwKCk7XG5cbmV4cG9ydCB7XG4gIEluamVjdGVkQ29ubmVjdG9yXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/chunk-JTELPB65.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeChainId: () => (/* binding */ normalizeChainId)\n/* harmony export */ });\n// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\")\n    return Number.parseInt(\n      chainId,\n      chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10\n    );\n  if (typeof chainId === \"bigint\")\n    return Number(chainId);\n  return chainId;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9jaHVuay1PUUlMWVFETy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtd2FnbWkvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9jaHVuay1PUUlMWVFETy5qcz9jOWIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9ub3JtYWxpemVDaGFpbklkLnRzXG5mdW5jdGlvbiBub3JtYWxpemVDaGFpbklkKGNoYWluSWQpIHtcbiAgaWYgKHR5cGVvZiBjaGFpbklkID09PSBcInN0cmluZ1wiKVxuICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICBjaGFpbklkLFxuICAgICAgY2hhaW5JZC50cmltKCkuc3Vic3RyaW5nKDAsIDIpID09PSBcIjB4XCIgPyAxNiA6IDEwXG4gICAgKTtcbiAgaWYgKHR5cGVvZiBjaGFpbklkID09PSBcImJpZ2ludFwiKVxuICAgIHJldHVybiBOdW1iZXIoY2hhaW5JZCk7XG4gIHJldHVybiBjaGFpbklkO1xufVxuXG5leHBvcnQge1xuICBub3JtYWxpemVDaGFpbklkXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainNotConfiguredForConnectorError: () => (/* binding */ ChainNotConfiguredForConnectorError),\n/* harmony export */   ConnectorNotFoundError: () => (/* binding */ ConnectorNotFoundError)\n/* harmony export */ });\n// src/errors.ts\nvar ChainNotConfiguredForConnectorError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfiguredForConnectorError\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9jaHVuay1VR0JHWVZCSC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsb0JBQW9CLFFBQVEsa0NBQWtDLFlBQVk7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBS0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXdhZ21pLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb25uZWN0b3JzL2Rpc3QvY2h1bmstVUdCR1lWQkguanM/MmZjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZXJyb3JzLnRzXG52YXIgQ2hhaW5Ob3RDb25maWd1cmVkRm9yQ29ubmVjdG9yRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3Ioe1xuICAgIGNoYWluSWQsXG4gICAgY29ubmVjdG9ySWRcbiAgfSkge1xuICAgIHN1cGVyKGBDaGFpbiBcIiR7Y2hhaW5JZH1cIiBub3QgY29uZmlndXJlZCBmb3IgY29ubmVjdG9yIFwiJHtjb25uZWN0b3JJZH1cIi5gKTtcbiAgICB0aGlzLm5hbWUgPSBcIkNoYWluTm90Q29uZmlndXJlZEZvckNvbm5lY3RvckVycm9yXCI7XG4gIH1cbn07XG52YXIgQ29ubmVjdG9yTm90Rm91bmRFcnJvciA9IGNsYXNzIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgIHRoaXMubmFtZSA9IFwiQ29ubmVjdG9yTm90Rm91bmRFcnJvclwiO1xuICAgIHRoaXMubWVzc2FnZSA9IFwiQ29ubmVjdG9yIG5vdCBmb3VuZFwiO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBDaGFpbk5vdENvbmZpZ3VyZWRGb3JDb25uZWN0b3JFcnJvcixcbiAgQ29ubmVjdG9yTm90Rm91bmRFcnJvclxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Connector: () => (/* binding */ Connector),\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateMethod: () => (/* binding */ __privateMethod),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/mainnet.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/goerli.js\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/base.ts\n\n\nvar Connector = class extends eventemitter3__WEBPACK_IMPORTED_MODULE_0__ {\n  constructor({\n    chains = [viem_chains__WEBPACK_IMPORTED_MODULE_1__.mainnet, viem_chains__WEBPACK_IMPORTED_MODULE_2__.goerli],\n    options\n  }) {\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n    if (blockExplorer)\n      return [\n        blockExplorer.url,\n        ...Object.values(blockExplorers).map((x) => x.url)\n      ];\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some((x) => x.id === chainId);\n  }\n  setStorage(storage) {\n    this.storage = storage;\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9jaHVuay1XNjVMQlBMVC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3dEO0FBQ1Y7QUFDOUMsOEJBQThCLDBDQUFZO0FBQzFDO0FBQ0EsY0FBYyxnREFBTyxFQUFFLCtDQUFNO0FBQzdCO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRDQUE0QztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFRRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtd2FnbWkvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9jaHVuay1XNjVMQlBMVC5qcz8wZDY3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IHtcbiAgaWYgKCFtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbn07XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgcmV0dXJuIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaik7XG59O1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IHtcbiAgaWYgKG1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO1xuICBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbn07XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xudmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwiYWNjZXNzIHByaXZhdGUgbWV0aG9kXCIpO1xuICByZXR1cm4gbWV0aG9kO1xufTtcblxuLy8gc3JjL2Jhc2UudHNcbmltcG9ydCB7IGRlZmF1bHQgYXMgRXZlbnRFbWl0dGVyIH0gZnJvbSBcImV2ZW50ZW1pdHRlcjNcIjtcbmltcG9ydCB7IGdvZXJsaSwgbWFpbm5ldCB9IGZyb20gXCJ2aWVtL2NoYWluc1wiO1xudmFyIENvbm5lY3RvciA9IGNsYXNzIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3Ioe1xuICAgIGNoYWlucyA9IFttYWlubmV0LCBnb2VybGldLFxuICAgIG9wdGlvbnNcbiAgfSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jaGFpbnMgPSBjaGFpbnM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuICBnZXRCbG9ja0V4cGxvcmVyVXJscyhjaGFpbikge1xuICAgIGNvbnN0IHsgZGVmYXVsdDogYmxvY2tFeHBsb3JlciwgLi4uYmxvY2tFeHBsb3JlcnMgfSA9IGNoYWluLmJsb2NrRXhwbG9yZXJzID8/IHt9O1xuICAgIGlmIChibG9ja0V4cGxvcmVyKVxuICAgICAgcmV0dXJuIFtcbiAgICAgICAgYmxvY2tFeHBsb3Jlci51cmwsXG4gICAgICAgIC4uLk9iamVjdC52YWx1ZXMoYmxvY2tFeHBsb3JlcnMpLm1hcCgoeCkgPT4geC51cmwpXG4gICAgICBdO1xuICB9XG4gIGlzQ2hhaW5VbnN1cHBvcnRlZChjaGFpbklkKSB7XG4gICAgcmV0dXJuICF0aGlzLmNoYWlucy5zb21lKCh4KSA9PiB4LmlkID09PSBjaGFpbklkKTtcbiAgfVxuICBzZXRTdG9yYWdlKHN0b3JhZ2UpIHtcbiAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBfX3ByaXZhdGVHZXQsXG4gIF9fcHJpdmF0ZUFkZCxcbiAgX19wcml2YXRlU2V0LFxuICBfX3ByaXZhdGVNZXRob2QsXG4gIENvbm5lY3RvclxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/coinbaseWallet.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/coinbaseWallet.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CoinbaseWalletConnector: () => (/* binding */ CoinbaseWalletConnector)\n/* harmony export */ });\n/* harmony import */ var _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chunk-UGBGYVBH.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js\");\n/* harmony import */ var _chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-OQILYQDO.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js\");\n/* harmony import */ var _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-W65LBPLT.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createWalletClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\n\n\n// src/coinbaseWallet.ts\n\nvar _client, _provider;\nvar CoinbaseWalletConnector = class extends _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.Connector {\n  constructor({ chains, options }) {\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    this.id = \"coinbaseWallet\";\n    this.name = \"Coinbase Wallet\";\n    this.ready = true;\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _client, void 0);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _provider, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = (0,_chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId)(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      this.emit(\"disconnect\");\n    };\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.enable();\n      const account = (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(\n        error.message\n      ))\n        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider))\n      return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = (0,_chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId)(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider)) {\n      let CoinbaseWalletSDK = (await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/preact\"), __webpack_require__.e(\"vendor-chunks/rxjs\"), __webpack_require__.e(\"vendor-chunks/@metamask\"), __webpack_require__.e(\"vendor-chunks/@coinbase\"), __webpack_require__.e(\"vendor-chunks/readable-stream\"), __webpack_require__.e(\"vendor-chunks/json-rpc-engine\"), __webpack_require__.e(\"vendor-chunks/eth-json-rpc-filters\"), __webpack_require__.e(\"vendor-chunks/sha.js\"), __webpack_require__.e(\"vendor-chunks/keccak\"), __webpack_require__.e(\"vendor-chunks/eth-block-tracker\"), __webpack_require__.e(\"vendor-chunks/qs\"), __webpack_require__.e(\"vendor-chunks/eth-rpc-errors\"), __webpack_require__.e(\"vendor-chunks/debug\"), __webpack_require__.e(\"vendor-chunks/async-mutex\"), __webpack_require__.e(\"vendor-chunks/yallist\"), __webpack_require__.e(\"vendor-chunks/object-inspect\"), __webpack_require__.e(\"vendor-chunks/inherits\"), __webpack_require__.e(\"vendor-chunks/has-symbols\"), __webpack_require__.e(\"vendor-chunks/function-bind\"), __webpack_require__.e(\"vendor-chunks/call-bind\"), __webpack_require__.e(\"vendor-chunks/xtend\"), __webpack_require__.e(\"vendor-chunks/util-deprecate\"), __webpack_require__.e(\"vendor-chunks/supports-color\"), __webpack_require__.e(\"vendor-chunks/string_decoder\"), __webpack_require__.e(\"vendor-chunks/side-channel\"), __webpack_require__.e(\"vendor-chunks/set-function-length\"), __webpack_require__.e(\"vendor-chunks/safe-buffer\"), __webpack_require__.e(\"vendor-chunks/pify\"), __webpack_require__.e(\"vendor-chunks/json-rpc-random-id\"), __webpack_require__.e(\"vendor-chunks/hasown\"), __webpack_require__.e(\"vendor-chunks/has-proto\"), __webpack_require__.e(\"vendor-chunks/has-property-descriptors\"), __webpack_require__.e(\"vendor-chunks/has-flag\"), __webpack_require__.e(\"vendor-chunks/gopd\"), __webpack_require__.e(\"vendor-chunks/get-intrinsic\"), __webpack_require__.e(\"vendor-chunks/fast-safe-stringify\"), __webpack_require__.e(\"vendor-chunks/eth-query\"), __webpack_require__.e(\"vendor-chunks/define-data-property\"), __webpack_require__.e(\"vendor-chunks/bn.js\"), __webpack_require__.e(\"vendor-chunks/bind-decorator\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @coinbase/wallet-sdk */ \"(ssr)/./node_modules/@coinbase/wallet-sdk/dist/index.js\", 19))).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\")\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateSet)(this, _client, new CoinbaseWalletSDK(this.options));\n      class WalletProvider {\n      }\n      class Client {\n      }\n      const walletExtensionChainId = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(\n        (chain2) => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId\n      ) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateSet)(this, _provider, (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return (0,viem__WEBPACK_IMPORTED_MODULE_4__.createWalletClient)({\n      account,\n      chain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_5__.custom)(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = (0,viem__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_7__.ChainNotConfiguredForConnectorError({\n          chainId,\n          connectorId: this.id\n        });\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (error2) {\n          throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error2);\n        }\n      }\n      throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n};\n_client = new WeakMap();\n_provider = new WeakMap();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/coinbaseWallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/metaMask.js":
/*!*********************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/metaMask.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetaMaskConnector: () => (/* binding */ MetaMaskConnector)\n/* harmony export */ });\n/* harmony import */ var _chunk_JTELPB65_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JTELPB65.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-JTELPB65.js\");\n/* harmony import */ var _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-UGBGYVBH.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js\");\n/* harmony import */ var _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-W65LBPLT.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n\n\n\n\n\n// src/metaMask.ts\n\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends _chunk_JTELPB65_js__WEBPACK_IMPORTED_MODULE_0__.InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state)\n            return;\n          if (ethereum2.isApexWallet)\n            return;\n          if (ethereum2.isAvalanche)\n            return;\n          if (ethereum2.isBitKeep)\n            return;\n          if (ethereum2.isBlockWallet)\n            return;\n          if (ethereum2.isCoin98)\n            return;\n          if (ethereum2.isFordefi)\n            return;\n          if (ethereum2.isMathWallet)\n            return;\n          if (ethereum2.isOkxWallet || ethereum2.isOKExWallet)\n            return;\n          if (ethereum2.isOneInchIOSWallet || ethereum2.isOneInchAndroidWallet)\n            return;\n          if (ethereum2.isOpera)\n            return;\n          if (ethereum2.isPortal)\n            return;\n          if (ethereum2.isRabby)\n            return;\n          if (ethereum2.isDefiant)\n            return;\n          if (ethereum2.isTokenPocket)\n            return;\n          if (ethereum2.isTokenary)\n            return;\n          if (ethereum2.isZeal)\n            return;\n          if (ethereum2.isZerion)\n            return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers)\n          return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"metaMask\";\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new _chunk_UGBGYVBH_js__WEBPACK_IMPORTED_MODULE_2__.ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if ((0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n            account = await this.getAccount();\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n            if (error.code === new viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError(error).code)\n              throw error;\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = (0,viem__WEBPACK_IMPORTED_MODULE_4__.getAddress)(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        this.storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9tZXRhTWFzay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFNkI7QUFHQTtBQUNBO0FBS0E7O0FBRTdCO0FBS2M7QUFDZDtBQUNBLHNDQUFzQyxpRUFBaUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsSUFBSSxJQUFJO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEMsSUFBSSxnRUFBWTtBQUNoQixJQUFJLGdFQUFZO0FBQ2hCO0FBQ0Esa0JBQWtCLFVBQVUsSUFBSTtBQUNoQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0VBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0EsVUFBVSxnRUFBWTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsa0JBQWtCO0FBQzNDLGFBQWE7QUFDYjtBQUNBLFlBQVk7QUFDWjtBQUNBLHdCQUF3QiwwREFBd0I7QUFDaEQsbUNBQW1DLDZEQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCLGdEQUFVO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrQkFBa0IsaUJBQWlCO0FBQ2xELE1BQU07QUFDTjtBQUNBLGtCQUFrQiwwREFBd0I7QUFDMUM7QUFDQSxrQkFBa0IsNkRBQTJCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtd2FnbWkvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC9tZXRhTWFzay5qcz8yYmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEluamVjdGVkQ29ubmVjdG9yXG59IGZyb20gXCIuL2NodW5rLUpURUxQQjY1LmpzXCI7XG5pbXBvcnQge1xuICBDb25uZWN0b3JOb3RGb3VuZEVycm9yXG59IGZyb20gXCIuL2NodW5rLVVHQkdZVkJILmpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLU9RSUxZUURPLmpzXCI7XG5pbXBvcnQge1xuICBfX3ByaXZhdGVBZGQsXG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlU2V0XG59IGZyb20gXCIuL2NodW5rLVc2NUxCUExULmpzXCI7XG5cbi8vIHNyYy9tZXRhTWFzay50c1xuaW1wb3J0IHtcbiAgUmVzb3VyY2VVbmF2YWlsYWJsZVJwY0Vycm9yLFxuICBVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IsXG4gIGdldEFkZHJlc3Ncbn0gZnJvbSBcInZpZW1cIjtcbnZhciBfVU5TVEFCTEVfc2hpbU9uQ29ubmVjdFNlbGVjdEFjY291bnQ7XG52YXIgTWV0YU1hc2tDb25uZWN0b3IgPSBjbGFzcyBleHRlbmRzIEluamVjdGVkQ29ubmVjdG9yIHtcbiAgY29uc3RydWN0b3Ioe1xuICAgIGNoYWlucyxcbiAgICBvcHRpb25zOiBvcHRpb25zX1xuICB9ID0ge30pIHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgbmFtZTogXCJNZXRhTWFza1wiLFxuICAgICAgc2hpbURpc2Nvbm5lY3Q6IHRydWUsXG4gICAgICBnZXRQcm92aWRlcigpIHtcbiAgICAgICAgZnVuY3Rpb24gZ2V0UmVhZHkoZXRoZXJldW0yKSB7XG4gICAgICAgICAgY29uc3QgaXNNZXRhTWFzayA9ICEhZXRoZXJldW0yPy5pc01ldGFNYXNrO1xuICAgICAgICAgIGlmICghaXNNZXRhTWFzaylcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBpZiAoZXRoZXJldW0yLmlzQnJhdmVXYWxsZXQgJiYgIWV0aGVyZXVtMi5fZXZlbnRzICYmICFldGhlcmV1bTIuX3N0YXRlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNBcGV4V2FsbGV0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNBdmFsYW5jaGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKGV0aGVyZXVtMi5pc0JpdEtlZXApXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKGV0aGVyZXVtMi5pc0Jsb2NrV2FsbGV0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNDb2luOTgpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKGV0aGVyZXVtMi5pc0ZvcmRlZmkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKGV0aGVyZXVtMi5pc01hdGhXYWxsZXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKGV0aGVyZXVtMi5pc09reFdhbGxldCB8fCBldGhlcmV1bTIuaXNPS0V4V2FsbGV0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNPbmVJbmNoSU9TV2FsbGV0IHx8IGV0aGVyZXVtMi5pc09uZUluY2hBbmRyb2lkV2FsbGV0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNPcGVyYSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBpZiAoZXRoZXJldW0yLmlzUG9ydGFsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNSYWJieSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBpZiAoZXRoZXJldW0yLmlzRGVmaWFudClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBpZiAoZXRoZXJldW0yLmlzVG9rZW5Qb2NrZXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKGV0aGVyZXVtMi5pc1Rva2VuYXJ5KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNaZWFsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmIChldGhlcmV1bTIuaXNaZXJpb24pXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgcmV0dXJuIGV0aGVyZXVtMjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGV0aGVyZXVtID0gd2luZG93LmV0aGVyZXVtO1xuICAgICAgICBpZiAoZXRoZXJldW0/LnByb3ZpZGVycylcbiAgICAgICAgICByZXR1cm4gZXRoZXJldW0ucHJvdmlkZXJzLmZpbmQoZ2V0UmVhZHkpO1xuICAgICAgICByZXR1cm4gZ2V0UmVhZHkoZXRoZXJldW0pO1xuICAgICAgfSxcbiAgICAgIC4uLm9wdGlvbnNfXG4gICAgfTtcbiAgICBzdXBlcih7IGNoYWlucywgb3B0aW9ucyB9KTtcbiAgICB0aGlzLmlkID0gXCJtZXRhTWFza1wiO1xuICAgIHRoaXMuc2hpbURpc2Nvbm5lY3RLZXkgPSBgJHt0aGlzLmlkfS5zaGltRGlzY29ubmVjdGA7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9VTlNUQUJMRV9zaGltT25Db25uZWN0U2VsZWN0QWNjb3VudCwgdm9pZCAwKTtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX1VOU1RBQkxFX3NoaW1PbkNvbm5lY3RTZWxlY3RBY2NvdW50LCBvcHRpb25zLlVOU1RBQkxFX3NoaW1PbkNvbm5lY3RTZWxlY3RBY2NvdW50KTtcbiAgfVxuICBhc3luYyBjb25uZWN0KHsgY2hhaW5JZCB9ID0ge30pIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKCk7XG4gICAgICBpZiAoIXByb3ZpZGVyKVxuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yTm90Rm91bmRFcnJvcigpO1xuICAgICAgaWYgKHByb3ZpZGVyLm9uKSB7XG4gICAgICAgIHByb3ZpZGVyLm9uKFwiYWNjb3VudHNDaGFuZ2VkXCIsIHRoaXMub25BY2NvdW50c0NoYW5nZWQpO1xuICAgICAgICBwcm92aWRlci5vbihcImNoYWluQ2hhbmdlZFwiLCB0aGlzLm9uQ2hhaW5DaGFuZ2VkKTtcbiAgICAgICAgcHJvdmlkZXIub24oXCJkaXNjb25uZWN0XCIsIHRoaXMub25EaXNjb25uZWN0KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZW1pdChcIm1lc3NhZ2VcIiwgeyB0eXBlOiBcImNvbm5lY3RpbmdcIiB9KTtcbiAgICAgIGxldCBhY2NvdW50ID0gbnVsbDtcbiAgICAgIGlmIChfX3ByaXZhdGVHZXQodGhpcywgX1VOU1RBQkxFX3NoaW1PbkNvbm5lY3RTZWxlY3RBY2NvdW50KSAmJiB0aGlzLm9wdGlvbnM/LnNoaW1EaXNjb25uZWN0ICYmICF0aGlzLnN0b3JhZ2U/LmdldEl0ZW0odGhpcy5zaGltRGlzY29ubmVjdEtleSkpIHtcbiAgICAgICAgYWNjb3VudCA9IGF3YWl0IHRoaXMuZ2V0QWNjb3VudCgpLmNhdGNoKCgpID0+IG51bGwpO1xuICAgICAgICBjb25zdCBpc0Nvbm5lY3RlZCA9ICEhYWNjb3VudDtcbiAgICAgICAgaWYgKGlzQ29ubmVjdGVkKVxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBwcm92aWRlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgbWV0aG9kOiBcIndhbGxldF9yZXF1ZXN0UGVybWlzc2lvbnNcIixcbiAgICAgICAgICAgICAgcGFyYW1zOiBbeyBldGhfYWNjb3VudHM6IHt9IH1dXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGFjY291bnQgPSBhd2FpdCB0aGlzLmdldEFjY291bnQoKTtcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IoZXJyb3IpKVxuICAgICAgICAgICAgICB0aHJvdyBuZXcgVXNlclJlamVjdGVkUmVxdWVzdEVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIGlmIChlcnJvci5jb2RlID09PSBuZXcgUmVzb3VyY2VVbmF2YWlsYWJsZVJwY0Vycm9yKGVycm9yKS5jb2RlKVxuICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoIWFjY291bnQpIHtcbiAgICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBwcm92aWRlci5yZXF1ZXN0KHtcbiAgICAgICAgICBtZXRob2Q6IFwiZXRoX3JlcXVlc3RBY2NvdW50c1wiXG4gICAgICAgIH0pO1xuICAgICAgICBhY2NvdW50ID0gZ2V0QWRkcmVzcyhhY2NvdW50c1swXSk7XG4gICAgICB9XG4gICAgICBsZXQgaWQgPSBhd2FpdCB0aGlzLmdldENoYWluSWQoKTtcbiAgICAgIGxldCB1bnN1cHBvcnRlZCA9IHRoaXMuaXNDaGFpblVuc3VwcG9ydGVkKGlkKTtcbiAgICAgIGlmIChjaGFpbklkICYmIGlkICE9PSBjaGFpbklkKSB7XG4gICAgICAgIGNvbnN0IGNoYWluID0gYXdhaXQgdGhpcy5zd2l0Y2hDaGFpbihjaGFpbklkKTtcbiAgICAgICAgaWQgPSBjaGFpbi5pZDtcbiAgICAgICAgdW5zdXBwb3J0ZWQgPSB0aGlzLmlzQ2hhaW5VbnN1cHBvcnRlZChpZCk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vcHRpb25zPy5zaGltRGlzY29ubmVjdClcbiAgICAgICAgdGhpcy5zdG9yYWdlPy5zZXRJdGVtKHRoaXMuc2hpbURpc2Nvbm5lY3RLZXksIHRydWUpO1xuICAgICAgcmV0dXJuIHsgYWNjb3VudCwgY2hhaW46IHsgaWQsIHVuc3VwcG9ydGVkIH0sIHByb3ZpZGVyIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmICh0aGlzLmlzVXNlclJlamVjdGVkUmVxdWVzdEVycm9yKGVycm9yKSlcbiAgICAgICAgdGhyb3cgbmV3IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcihlcnJvcik7XG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gLTMyMDAyKVxuICAgICAgICB0aHJvdyBuZXcgUmVzb3VyY2VVbmF2YWlsYWJsZVJwY0Vycm9yKGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxufTtcbl9VTlNUQUJMRV9zaGltT25Db25uZWN0U2VsZWN0QWNjb3VudCA9IG5ldyBXZWFrTWFwKCk7XG5leHBvcnQge1xuICBNZXRhTWFza0Nvbm5lY3RvclxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/metaMask.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/walletConnect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/walletConnect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectConnector: () => (/* binding */ WalletConnectConnector)\n/* harmony export */ });\n/* harmony import */ var _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-W65LBPLT.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/dist/index.cjs.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createWalletClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\n// src/walletConnect.ts\n\n\nvar NAMESPACE = \"eip155\";\nvar STORE_KEY = \"store\";\nvar REQUESTED_CHAINS_KEY = \"requestedChains\";\nvar ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nvar _provider, _initProviderPromise, _createProvider, createProvider_fn, _initProvider, initProvider_fn, _isChainsStale, isChainsStale_fn, _setupListeners, setupListeners_fn, _removeListeners, removeListeners_fn, _setRequestedChainsIds, setRequestedChainsIds_fn, _getRequestedChainsIds, getRequestedChainsIds_fn, _getNamespaceChainsIds, getNamespaceChainsIds_fn, _getNamespaceMethods, getNamespaceMethods_fn;\nvar WalletConnectConnector = class extends _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.Connector {\n  constructor(config) {\n    super({\n      ...config,\n      options: { isNewChainsStale: true, ...config.options }\n    });\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _createProvider);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _initProvider);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _isChainsStale);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _setupListeners);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _removeListeners);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _setRequestedChainsIds);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _getRequestedChainsIds);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _getNamespaceChainsIds);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _getNamespaceMethods);\n    this.id = \"walletConnect\";\n    this.name = \"WalletConnect\";\n    this.ready = true;\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _provider, void 0);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _initProviderPromise, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n      this.emit(\"disconnect\");\n    };\n    this.onDisplayUri = (uri) => {\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\n    };\n    this.onConnect = () => {\n      this.emit(\"connect\", {});\n    };\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _createProvider, createProvider_fn).call(this);\n  }\n  async connect({ chainId, pairingTopic } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(STORE_KEY);\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n        else\n          targetChainId = this.chains[0]?.id;\n      }\n      if (!targetChainId)\n        throw new Error(\"No chains found on connector.\");\n      const provider = await this.getProvider();\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _setupListeners, setupListeners_fn).call(this);\n      const isChainsStale = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (provider.session && isChainsStale)\n        await provider.disconnect();\n      if (!provider.session || isChainsStale) {\n        const optionalChains = this.chains.filter((chain) => chain.id !== targetChainId).map((optionalChain) => optionalChain.id);\n        this.emit(\"message\", { type: \"connecting\" });\n        await provider.connect({\n          pairingTopic,\n          chains: [targetChainId],\n          optionalChains: optionalChains.length ? optionalChains : void 0\n        });\n        (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, this.chains.map(({ id: id2 }) => id2));\n      }\n      const accounts = await provider.enable();\n      const account = (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message))\n        throw error;\n    } finally {\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _removeListeners, removeListeners_fn).call(this);\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n    }\n  }\n  async getAccount() {\n    const { accounts } = await this.getProvider();\n    return (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n  }\n  async getChainId() {\n    const { chainId } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider({ chainId } = {}) {\n    if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider))\n      await (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _createProvider, createProvider_fn).call(this);\n    if (chainId)\n      await this.switchChain(chainId);\n    return (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.createWalletClient)({\n      account,\n      chain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.custom)(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([\n        this.getAccount(),\n        this.getProvider()\n      ]);\n      const isChainsStale = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (!account)\n        return false;\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {\n        }\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find((chain2) => chain2.id === chainId);\n    if (!chain)\n      throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(new Error(\"chain not found on connector.\"));\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n      const namespaceMethods = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [\n            {\n              chainId: (0,viem__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(chain.id),\n              blockExplorerUrls: [chain.blockExplorers?.default?.url],\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [...chain.rpcUrls.default.http]\n            }\n          ]\n        });\n        const requestedChains = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n        requestedChains.push(chainId);\n        (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: (0,viem__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(chainId) }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n      }\n      throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n    }\n  }\n};\n_provider = new WeakMap();\n_initProviderPromise = new WeakMap();\n_createProvider = new WeakSet();\ncreateProvider_fn = async function() {\n  if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _initProviderPromise) && typeof window !== \"undefined\") {\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateSet)(this, _initProviderPromise, (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _initProvider, initProvider_fn).call(this));\n  }\n  return (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _initProviderPromise);\n};\n_initProvider = new WeakSet();\ninitProvider_fn = async function() {\n  const { EthereumProvider, OPTIONAL_EVENTS, OPTIONAL_METHODS } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/tr46\"), __webpack_require__.e(\"vendor-chunks/@stablelib\"), __webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"vendor-chunks/node-fetch\"), __webpack_require__.e(\"vendor-chunks/whatwg-url\"), __webpack_require__.e(\"vendor-chunks/webidl-conversions\"), __webpack_require__.e(\"vendor-chunks/cross-fetch\"), __webpack_require__.e(\"vendor-chunks/pino\"), __webpack_require__.e(\"vendor-chunks/fast-redact\"), __webpack_require__.e(\"vendor-chunks/unstorage\"), __webpack_require__.e(\"vendor-chunks/pino-std-serializers\"), __webpack_require__.e(\"vendor-chunks/thread-stream\"), __webpack_require__.e(\"vendor-chunks/destr\"), __webpack_require__.e(\"vendor-chunks/sonic-boom\"), __webpack_require__.e(\"vendor-chunks/safe-stable-stringify\"), __webpack_require__.e(\"vendor-chunks/quick-format-unescaped\"), __webpack_require__.e(\"vendor-chunks/process-warning\"), __webpack_require__.e(\"vendor-chunks/on-exit-leak-free\"), __webpack_require__.e(\"vendor-chunks/lodash.isequal\"), __webpack_require__.e(\"vendor-chunks/atomic-sleep\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/ethereum-provider */ \"(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\"));\n  const [defaultChain, ...optionalChains] = this.chains.map(({ id }) => id);\n  if (defaultChain) {\n    const {\n      projectId,\n      showQrModal = true,\n      qrModalOptions,\n      metadata,\n      relayUrl\n    } = this.options;\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateSet)(this, _provider, await EthereumProvider.init({\n      showQrModal,\n      qrModalOptions,\n      projectId,\n      optionalMethods: OPTIONAL_METHODS,\n      optionalEvents: OPTIONAL_EVENTS,\n      chains: [defaultChain],\n      optionalChains: optionalChains.length ? optionalChains : void 0,\n      rpcMap: Object.fromEntries(\n        this.chains.map((chain) => [\n          chain.id,\n          chain.rpcUrls.default.http[0]\n        ])\n      ),\n      metadata,\n      relayUrl\n    }));\n  }\n};\n_isChainsStale = new WeakSet();\nisChainsStale_fn = function() {\n  const namespaceMethods = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD))\n    return false;\n  if (!this.options.isNewChainsStale)\n    return false;\n  const requestedChains = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n  const connectorChains = this.chains.map(({ id }) => id);\n  const namespaceChains = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n  if (namespaceChains.length && !namespaceChains.some((id) => connectorChains.includes(id)))\n    return false;\n  return !connectorChains.every((id) => requestedChains.includes(id));\n};\n_setupListeners = new WeakSet();\nsetupListeners_fn = function() {\n  if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider))\n    return;\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _removeListeners, removeListeners_fn).call(this);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).on(\"chainChanged\", this.onChainChanged);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).on(\"disconnect\", this.onDisconnect);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).on(\"session_delete\", this.onDisconnect);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).on(\"display_uri\", this.onDisplayUri);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).on(\"connect\", this.onConnect);\n};\n_removeListeners = new WeakSet();\nremoveListeners_fn = function() {\n  if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider))\n    return;\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).removeListener(\"connect\", this.onConnect);\n};\n_setRequestedChainsIds = new WeakSet();\nsetRequestedChainsIds_fn = function(chains) {\n  this.storage?.setItem(REQUESTED_CHAINS_KEY, chains);\n};\n_getRequestedChainsIds = new WeakSet();\ngetRequestedChainsIds_fn = function() {\n  return this.storage?.getItem(REQUESTED_CHAINS_KEY) ?? [];\n};\n_getNamespaceChainsIds = new WeakSet();\ngetNamespaceChainsIds_fn = function() {\n  if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider))\n    return [];\n  const namespaces = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.normalizeNamespaces)(namespaces);\n  const chainIds = normalizedNamespaces[NAMESPACE]?.chains?.map(\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\n  );\n  return chainIds ?? [];\n};\n_getNamespaceMethods = new WeakSet();\ngetNamespaceMethods_fn = function() {\n  if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider))\n    return [];\n  const namespaces = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.normalizeNamespaces)(namespaces);\n  const methods = normalizedNamespaces[NAMESPACE]?.methods;\n  return methods ?? [];\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/walletConnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/walletConnectLegacy.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/walletConnectLegacy.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectLegacyConnector: () => (/* binding */ WalletConnectLegacyConnector)\n/* harmony export */ });\n/* harmony import */ var _chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-OQILYQDO.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js\");\n/* harmony import */ var _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-W65LBPLT.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createWalletClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\n\n// src/walletConnectLegacy.ts\n\nvar switchChainAllowedRegex = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i;\nvar _provider, _switchChain, switchChain_fn;\nvar WalletConnectLegacyConnector = class extends _chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.Connector {\n  constructor() {\n    super(...arguments);\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _switchChain);\n    this.id = \"walletConnectLegacy\";\n    this.name = \"WalletConnectLegacy\";\n    this.ready = true;\n    (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateAdd)(this, _provider, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = (0,_chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId)(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      this.emit(\"disconnect\");\n    };\n  }\n  async connect({ chainId } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(\"store\");\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      setTimeout(() => this.emit(\"message\", { type: \"connecting\" }), 0);\n      const accounts = await provider.enable();\n      const account = (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      const walletName = provider.connector?.peerMeta?.name ?? \"\";\n      if (switchChainAllowedRegex.test(walletName))\n        this.switchChain = (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateMethod)(this, _switchChain, switchChain_fn);\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message))\n        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    typeof localStorage !== \"undefined\" && localStorage.removeItem(\"walletconnect\");\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts;\n    return (0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = (0,_chunk_OQILYQDO_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId)(provider.chainId);\n    return chainId;\n  }\n  async getProvider({\n    chainId,\n    create\n  } = {}) {\n    if (!(0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce(\n        (rpc2, chain) => ({\n          ...rpc2,\n          [chain.id]: chain.rpcUrls.default.http[0]\n        }),\n        {}\n      ) : {};\n      const WalletConnectProvider = (await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/tr46\"), __webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"vendor-chunks/node-fetch\"), __webpack_require__.e(\"vendor-chunks/whatwg-url\"), __webpack_require__.e(\"vendor-chunks/preact\"), __webpack_require__.e(\"vendor-chunks/webidl-conversions\"), __webpack_require__.e(\"vendor-chunks/cross-fetch\"), __webpack_require__.e(\"vendor-chunks/typedarray-to-buffer\"), __webpack_require__.e(\"vendor-chunks/toggle-selection\"), __webpack_require__.e(\"vendor-chunks/query-string\"), __webpack_require__.e(\"vendor-chunks/is-typedarray\"), __webpack_require__.e(\"vendor-chunks/copy-to-clipboard\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @walletconnect/legacy-provider */ \"(ssr)/./node_modules/@walletconnect/legacy-provider/dist/cjs/index.js\", 19))).default;\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateSet)(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: { ...rpc, ...this.options?.rpc }\n      }));\n      (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).http = await (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider).setHttpProvider(chainId);\n    }\n    return (0,_chunk_W65LBPLT_js__WEBPACK_IMPORTED_MODULE_0__.__privateGet)(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return (0,viem__WEBPACK_IMPORTED_MODULE_4__.createWalletClient)({\n      account,\n      chain,\n      transport: (0,viem__WEBPACK_IMPORTED_MODULE_5__.custom)(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n};\n_provider = new WeakMap();\n_switchChain = new WeakSet();\nswitchChain_fn = async function(chainId) {\n  const provider = await this.getProvider();\n  const id = (0,viem__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(chainId);\n  try {\n    await Promise.race([\n      provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      }),\n      new Promise(\n        (res) => this.on(\"change\", ({ chain }) => {\n          if (chain?.id === chainId)\n            res(chainId);\n        })\n      )\n    ]);\n    return this.chains.find((x) => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n      rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n    };\n  } catch (error) {\n    const message = typeof error === \"string\" ? error : error?.message;\n    if (/user rejected request/i.test(message))\n      throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n    throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(error);\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC93YWxsZXRDb25uZWN0TGVnYWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRTZCO0FBT0E7O0FBRTdCO0FBUWM7QUFDZDtBQUNBO0FBQ0EsaURBQWlELHlEQUFTO0FBQzFEO0FBQ0E7QUFDQSxJQUFJLGdFQUFZO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0VBQVk7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsU0FBUyxnREFBVSxlQUFlO0FBQ2hFO0FBQ0E7QUFDQSxpQkFBaUIsb0VBQWdCO0FBQ2pDO0FBQ0EsNEJBQTRCLFNBQVMsbUJBQW1CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsVUFBVSxJQUFJO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsOENBQThDLG9CQUFvQjtBQUNsRTtBQUNBLHNCQUFzQixnREFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixtRUFBZTtBQUMxQztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esa0JBQWtCLDBEQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnREFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0VBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUixTQUFTLGdFQUFZO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQ0FBMkMsbTNCQUF3QztBQUNuRixNQUFNLGdFQUFZO0FBQ2xCO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsT0FBTztBQUNQLE1BQU0sZ0VBQVksK0JBQStCLGdFQUFZO0FBQzdEO0FBQ0EsV0FBVyxnRUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUjtBQUNBLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdEQUFrQjtBQUM3QjtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFNO0FBQ3ZCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlEQUFXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGFBQWE7QUFDaEMsT0FBTztBQUNQO0FBQ0Esc0NBQXNDLE9BQU87QUFDN0M7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixHQUFHO0FBQ3hCLGtCQUFrQixHQUFHO0FBQ3JCLHdCQUF3Qiw0Q0FBNEM7QUFDcEUsaUJBQWlCLFdBQVcsWUFBWSxZQUFZO0FBQ3BEO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQXdCO0FBQ3hDLGNBQWMsa0RBQWdCO0FBQzlCO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtd2FnbWkvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2Nvbm5lY3RvcnMvZGlzdC93YWxsZXRDb25uZWN0TGVnYWN5LmpzPzAwY2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgbm9ybWFsaXplQ2hhaW5JZFxufSBmcm9tIFwiLi9jaHVuay1PUUlMWVFETy5qc1wiO1xuaW1wb3J0IHtcbiAgQ29ubmVjdG9yLFxuICBfX3ByaXZhdGVBZGQsXG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlTWV0aG9kLFxuICBfX3ByaXZhdGVTZXRcbn0gZnJvbSBcIi4vY2h1bmstVzY1TEJQTFQuanNcIjtcblxuLy8gc3JjL3dhbGxldENvbm5lY3RMZWdhY3kudHNcbmltcG9ydCB7XG4gIFN3aXRjaENoYWluRXJyb3IsXG4gIFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcixcbiAgY3JlYXRlV2FsbGV0Q2xpZW50LFxuICBjdXN0b20sXG4gIGdldEFkZHJlc3MsXG4gIG51bWJlclRvSGV4XG59IGZyb20gXCJ2aWVtXCI7XG52YXIgc3dpdGNoQ2hhaW5BbGxvd2VkUmVnZXggPSAvKGltdG9rZW58bWV0YW1hc2t8cmFpbmJvd3x0cnVzdCB3YWxsZXR8dW5pc3dhcCB3YWxsZXR8bGVkZ2VyKS9pO1xudmFyIF9wcm92aWRlciwgX3N3aXRjaENoYWluLCBzd2l0Y2hDaGFpbl9mbjtcbnZhciBXYWxsZXRDb25uZWN0TGVnYWN5Q29ubmVjdG9yID0gY2xhc3MgZXh0ZW5kcyBDb25uZWN0b3Ige1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfc3dpdGNoQ2hhaW4pO1xuICAgIHRoaXMuaWQgPSBcIndhbGxldENvbm5lY3RMZWdhY3lcIjtcbiAgICB0aGlzLm5hbWUgPSBcIldhbGxldENvbm5lY3RMZWdhY3lcIjtcbiAgICB0aGlzLnJlYWR5ID0gdHJ1ZTtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX3Byb3ZpZGVyLCB2b2lkIDApO1xuICAgIHRoaXMub25BY2NvdW50c0NoYW5nZWQgPSAoYWNjb3VudHMpID0+IHtcbiAgICAgIGlmIChhY2NvdW50cy5sZW5ndGggPT09IDApXG4gICAgICAgIHRoaXMuZW1pdChcImRpc2Nvbm5lY3RcIik7XG4gICAgICBlbHNlXG4gICAgICAgIHRoaXMuZW1pdChcImNoYW5nZVwiLCB7IGFjY291bnQ6IGdldEFkZHJlc3MoYWNjb3VudHNbMF0pIH0pO1xuICAgIH07XG4gICAgdGhpcy5vbkNoYWluQ2hhbmdlZCA9IChjaGFpbklkKSA9PiB7XG4gICAgICBjb25zdCBpZCA9IG5vcm1hbGl6ZUNoYWluSWQoY2hhaW5JZCk7XG4gICAgICBjb25zdCB1bnN1cHBvcnRlZCA9IHRoaXMuaXNDaGFpblVuc3VwcG9ydGVkKGlkKTtcbiAgICAgIHRoaXMuZW1pdChcImNoYW5nZVwiLCB7IGNoYWluOiB7IGlkLCB1bnN1cHBvcnRlZCB9IH0pO1xuICAgIH07XG4gICAgdGhpcy5vbkRpc2Nvbm5lY3QgPSAoKSA9PiB7XG4gICAgICB0aGlzLmVtaXQoXCJkaXNjb25uZWN0XCIpO1xuICAgIH07XG4gIH1cbiAgYXN5bmMgY29ubmVjdCh7IGNoYWluSWQgfSA9IHt9KSB7XG4gICAgdHJ5IHtcbiAgICAgIGxldCB0YXJnZXRDaGFpbklkID0gY2hhaW5JZDtcbiAgICAgIGlmICghdGFyZ2V0Q2hhaW5JZCkge1xuICAgICAgICBjb25zdCBzdG9yZSA9IHRoaXMuc3RvcmFnZT8uZ2V0SXRlbShcInN0b3JlXCIpO1xuICAgICAgICBjb25zdCBsYXN0VXNlZENoYWluSWQgPSBzdG9yZT8uc3RhdGU/LmRhdGE/LmNoYWluPy5pZDtcbiAgICAgICAgaWYgKGxhc3RVc2VkQ2hhaW5JZCAmJiAhdGhpcy5pc0NoYWluVW5zdXBwb3J0ZWQobGFzdFVzZWRDaGFpbklkKSlcbiAgICAgICAgICB0YXJnZXRDaGFpbklkID0gbGFzdFVzZWRDaGFpbklkO1xuICAgICAgfVxuICAgICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKHtcbiAgICAgICAgY2hhaW5JZDogdGFyZ2V0Q2hhaW5JZCxcbiAgICAgICAgY3JlYXRlOiB0cnVlXG4gICAgICB9KTtcbiAgICAgIHByb3ZpZGVyLm9uKFwiYWNjb3VudHNDaGFuZ2VkXCIsIHRoaXMub25BY2NvdW50c0NoYW5nZWQpO1xuICAgICAgcHJvdmlkZXIub24oXCJjaGFpbkNoYW5nZWRcIiwgdGhpcy5vbkNoYWluQ2hhbmdlZCk7XG4gICAgICBwcm92aWRlci5vbihcImRpc2Nvbm5lY3RcIiwgdGhpcy5vbkRpc2Nvbm5lY3QpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmVtaXQoXCJtZXNzYWdlXCIsIHsgdHlwZTogXCJjb25uZWN0aW5nXCIgfSksIDApO1xuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBwcm92aWRlci5lbmFibGUoKTtcbiAgICAgIGNvbnN0IGFjY291bnQgPSBnZXRBZGRyZXNzKGFjY291bnRzWzBdKTtcbiAgICAgIGNvbnN0IGlkID0gYXdhaXQgdGhpcy5nZXRDaGFpbklkKCk7XG4gICAgICBjb25zdCB1bnN1cHBvcnRlZCA9IHRoaXMuaXNDaGFpblVuc3VwcG9ydGVkKGlkKTtcbiAgICAgIGNvbnN0IHdhbGxldE5hbWUgPSBwcm92aWRlci5jb25uZWN0b3I/LnBlZXJNZXRhPy5uYW1lID8/IFwiXCI7XG4gICAgICBpZiAoc3dpdGNoQ2hhaW5BbGxvd2VkUmVnZXgudGVzdCh3YWxsZXROYW1lKSlcbiAgICAgICAgdGhpcy5zd2l0Y2hDaGFpbiA9IF9fcHJpdmF0ZU1ldGhvZCh0aGlzLCBfc3dpdGNoQ2hhaW4sIHN3aXRjaENoYWluX2ZuKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGFjY291bnQsXG4gICAgICAgIGNoYWluOiB7IGlkLCB1bnN1cHBvcnRlZCB9XG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBpZiAoL3VzZXIgY2xvc2VkIG1vZGFsL2kudGVzdChlcnJvci5tZXNzYWdlKSlcbiAgICAgICAgdGhyb3cgbmV3IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvcihlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cbiAgYXN5bmMgZGlzY29ubmVjdCgpIHtcbiAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICBhd2FpdCBwcm92aWRlci5kaXNjb25uZWN0KCk7XG4gICAgcHJvdmlkZXIucmVtb3ZlTGlzdGVuZXIoXCJhY2NvdW50c0NoYW5nZWRcIiwgdGhpcy5vbkFjY291bnRzQ2hhbmdlZCk7XG4gICAgcHJvdmlkZXIucmVtb3ZlTGlzdGVuZXIoXCJjaGFpbkNoYW5nZWRcIiwgdGhpcy5vbkNoYWluQ2hhbmdlZCk7XG4gICAgcHJvdmlkZXIucmVtb3ZlTGlzdGVuZXIoXCJkaXNjb25uZWN0XCIsIHRoaXMub25EaXNjb25uZWN0KTtcbiAgICB0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSBcInVuZGVmaW5lZFwiICYmIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwid2FsbGV0Y29ubmVjdFwiKTtcbiAgfVxuICBhc3luYyBnZXRBY2NvdW50KCkge1xuICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpO1xuICAgIGNvbnN0IGFjY291bnRzID0gcHJvdmlkZXIuYWNjb3VudHM7XG4gICAgcmV0dXJuIGdldEFkZHJlc3MoYWNjb3VudHNbMF0pO1xuICB9XG4gIGFzeW5jIGdldENoYWluSWQoKSB7XG4gICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKCk7XG4gICAgY29uc3QgY2hhaW5JZCA9IG5vcm1hbGl6ZUNoYWluSWQocHJvdmlkZXIuY2hhaW5JZCk7XG4gICAgcmV0dXJuIGNoYWluSWQ7XG4gIH1cbiAgYXN5bmMgZ2V0UHJvdmlkZXIoe1xuICAgIGNoYWluSWQsXG4gICAgY3JlYXRlXG4gIH0gPSB7fSkge1xuICAgIGlmICghX19wcml2YXRlR2V0KHRoaXMsIF9wcm92aWRlcikgfHwgY2hhaW5JZCB8fCBjcmVhdGUpIHtcbiAgICAgIGNvbnN0IHJwYyA9ICF0aGlzLm9wdGlvbnM/LmluZnVyYUlkID8gdGhpcy5jaGFpbnMucmVkdWNlKFxuICAgICAgICAocnBjMiwgY2hhaW4pID0+ICh7XG4gICAgICAgICAgLi4ucnBjMixcbiAgICAgICAgICBbY2hhaW4uaWRdOiBjaGFpbi5ycGNVcmxzLmRlZmF1bHQuaHR0cFswXVxuICAgICAgICB9KSxcbiAgICAgICAge31cbiAgICAgICkgOiB7fTtcbiAgICAgIGNvbnN0IFdhbGxldENvbm5lY3RQcm92aWRlciA9IChhd2FpdCBpbXBvcnQoXCJAd2FsbGV0Y29ubmVjdC9sZWdhY3ktcHJvdmlkZXJcIikpLmRlZmF1bHQ7XG4gICAgICBfX3ByaXZhdGVTZXQodGhpcywgX3Byb3ZpZGVyLCBuZXcgV2FsbGV0Q29ubmVjdFByb3ZpZGVyKHtcbiAgICAgICAgLi4udGhpcy5vcHRpb25zLFxuICAgICAgICBjaGFpbklkLFxuICAgICAgICBycGM6IHsgLi4ucnBjLCAuLi50aGlzLm9wdGlvbnM/LnJwYyB9XG4gICAgICB9KSk7XG4gICAgICBfX3ByaXZhdGVHZXQodGhpcywgX3Byb3ZpZGVyKS5odHRwID0gYXdhaXQgX19wcml2YXRlR2V0KHRoaXMsIF9wcm92aWRlcikuc2V0SHR0cFByb3ZpZGVyKGNoYWluSWQpO1xuICAgIH1cbiAgICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF9wcm92aWRlcik7XG4gIH1cbiAgYXN5bmMgZ2V0V2FsbGV0Q2xpZW50KHtcbiAgICBjaGFpbklkXG4gIH0gPSB7fSkge1xuICAgIGNvbnN0IFtwcm92aWRlciwgYWNjb3VudF0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICB0aGlzLmdldFByb3ZpZGVyKHsgY2hhaW5JZCB9KSxcbiAgICAgIHRoaXMuZ2V0QWNjb3VudCgpXG4gICAgXSk7XG4gICAgY29uc3QgY2hhaW4gPSB0aGlzLmNoYWlucy5maW5kKCh4KSA9PiB4LmlkID09PSBjaGFpbklkKTtcbiAgICBpZiAoIXByb3ZpZGVyKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwicHJvdmlkZXIgaXMgcmVxdWlyZWQuXCIpO1xuICAgIHJldHVybiBjcmVhdGVXYWxsZXRDbGllbnQoe1xuICAgICAgYWNjb3VudCxcbiAgICAgIGNoYWluLFxuICAgICAgdHJhbnNwb3J0OiBjdXN0b20ocHJvdmlkZXIpXG4gICAgfSk7XG4gIH1cbiAgYXN5bmMgaXNBdXRob3JpemVkKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgdGhpcy5nZXRBY2NvdW50KCk7XG4gICAgICByZXR1cm4gISFhY2NvdW50O1xuICAgIH0gY2F0Y2gge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufTtcbl9wcm92aWRlciA9IG5ldyBXZWFrTWFwKCk7XG5fc3dpdGNoQ2hhaW4gPSBuZXcgV2Vha1NldCgpO1xuc3dpdGNoQ2hhaW5fZm4gPSBhc3luYyBmdW5jdGlvbihjaGFpbklkKSB7XG4gIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpO1xuICBjb25zdCBpZCA9IG51bWJlclRvSGV4KGNoYWluSWQpO1xuICB0cnkge1xuICAgIGF3YWl0IFByb21pc2UucmFjZShbXG4gICAgICBwcm92aWRlci5yZXF1ZXN0KHtcbiAgICAgICAgbWV0aG9kOiBcIndhbGxldF9zd2l0Y2hFdGhlcmV1bUNoYWluXCIsXG4gICAgICAgIHBhcmFtczogW3sgY2hhaW5JZDogaWQgfV1cbiAgICAgIH0pLFxuICAgICAgbmV3IFByb21pc2UoXG4gICAgICAgIChyZXMpID0+IHRoaXMub24oXCJjaGFuZ2VcIiwgKHsgY2hhaW4gfSkgPT4ge1xuICAgICAgICAgIGlmIChjaGFpbj8uaWQgPT09IGNoYWluSWQpXG4gICAgICAgICAgICByZXMoY2hhaW5JZCk7XG4gICAgICAgIH0pXG4gICAgICApXG4gICAgXSk7XG4gICAgcmV0dXJuIHRoaXMuY2hhaW5zLmZpbmQoKHgpID0+IHguaWQgPT09IGNoYWluSWQpID8/IHtcbiAgICAgIGlkOiBjaGFpbklkLFxuICAgICAgbmFtZTogYENoYWluICR7aWR9YCxcbiAgICAgIG5ldHdvcms6IGAke2lkfWAsXG4gICAgICBuYXRpdmVDdXJyZW5jeTogeyBuYW1lOiBcIkV0aGVyXCIsIGRlY2ltYWxzOiAxOCwgc3ltYm9sOiBcIkVUSFwiIH0sXG4gICAgICBycGNVcmxzOiB7IGRlZmF1bHQ6IHsgaHR0cDogW1wiXCJdIH0sIHB1YmxpYzogeyBodHRwOiBbXCJcIl0gfSB9XG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCBtZXNzYWdlID0gdHlwZW9mIGVycm9yID09PSBcInN0cmluZ1wiID8gZXJyb3IgOiBlcnJvcj8ubWVzc2FnZTtcbiAgICBpZiAoL3VzZXIgcmVqZWN0ZWQgcmVxdWVzdC9pLnRlc3QobWVzc2FnZSkpXG4gICAgICB0aHJvdyBuZXcgVXNlclJlamVjdGVkUmVxdWVzdEVycm9yKGVycm9yKTtcbiAgICB0aHJvdyBuZXcgU3dpdGNoQ2hhaW5FcnJvcihlcnJvcik7XG4gIH1cbn07XG5leHBvcnQge1xuICBXYWxsZXRDb25uZWN0TGVnYWN5Q29ubmVjdG9yXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/walletConnectLegacy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/chunk-MQXBDTVK.js":
/*!*********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/chunk-MQXBDTVK.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateMethod: () => (/* binding */ __privateMethod),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet)\n/* harmony export */ });\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9jaHVuay1NUVhCRFRWSy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBT0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LXdhZ21pLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvY2h1bmstTVFYQkRUVksuanM/NjkwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hY2Nlc3NDaGVjayA9IChvYmosIG1lbWJlciwgbXNnKSA9PiB7XG4gIGlmICghbWVtYmVyLmhhcyhvYmopKVxuICAgIHRocm93IFR5cGVFcnJvcihcIkNhbm5vdCBcIiArIG1zZyk7XG59O1xudmFyIF9fcHJpdmF0ZUdldCA9IChvYmosIG1lbWJlciwgZ2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwicmVhZCBmcm9tIHByaXZhdGUgZmllbGRcIik7XG4gIHJldHVybiBnZXR0ZXIgPyBnZXR0ZXIuY2FsbChvYmopIDogbWVtYmVyLmdldChvYmopO1xufTtcbnZhciBfX3ByaXZhdGVBZGQgPSAob2JqLCBtZW1iZXIsIHZhbHVlKSA9PiB7XG4gIGlmIChtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IGFkZCB0aGUgc2FtZSBwcml2YXRlIG1lbWJlciBtb3JlIHRoYW4gb25jZVwiKTtcbiAgbWVtYmVyIGluc3RhbmNlb2YgV2Vha1NldCA/IG1lbWJlci5hZGQob2JqKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7XG59O1xudmFyIF9fcHJpdmF0ZVNldCA9IChvYmosIG1lbWJlciwgdmFsdWUsIHNldHRlcikgPT4ge1xuICBfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcIndyaXRlIHRvIHByaXZhdGUgZmllbGRcIik7XG4gIHNldHRlciA/IHNldHRlci5jYWxsKG9iaiwgdmFsdWUpIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbiAgcmV0dXJuIHZhbHVlO1xufTtcbnZhciBfX3ByaXZhdGVNZXRob2QgPSAob2JqLCBtZW1iZXIsIG1ldGhvZCkgPT4ge1xuICBfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcImFjY2VzcyBwcml2YXRlIG1ldGhvZFwiKTtcbiAgcmV0dXJuIG1ldGhvZDtcbn07XG5cbmV4cG9ydCB7XG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlQWRkLFxuICBfX3ByaXZhdGVTZXQsXG4gIF9fcHJpdmF0ZU1ldGhvZFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/chunk-MQXBDTVK.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/chunk-TSH6VVF4.js":
/*!*********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/chunk-TSH6VVF4.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainMismatchError: () => (/* binding */ ChainMismatchError),\n/* harmony export */   ChainNotConfiguredError: () => (/* binding */ ChainNotConfiguredError),\n/* harmony export */   Config: () => (/* binding */ Config),\n/* harmony export */   ConfigChainsNotFound: () => (/* binding */ ConfigChainsNotFound),\n/* harmony export */   ConnectorAlreadyConnectedError: () => (/* binding */ ConnectorAlreadyConnectedError),\n/* harmony export */   ConnectorNotFoundError: () => (/* reexport safe */ _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError),\n/* harmony export */   SwitchChainNotSupportedError: () => (/* binding */ SwitchChainNotSupportedError),\n/* harmony export */   configureChains: () => (/* binding */ configureChains),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   createConfig: () => (/* binding */ createConfig),\n/* harmony export */   createStorage: () => (/* binding */ createStorage),\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual),\n/* harmony export */   deserialize: () => (/* binding */ deserialize),\n/* harmony export */   disconnect: () => (/* binding */ disconnect),\n/* harmony export */   erc20ABI: () => (/* binding */ erc20ABI),\n/* harmony export */   erc4626ABI: () => (/* binding */ erc4626ABI),\n/* harmony export */   erc721ABI: () => (/* binding */ erc721ABI),\n/* harmony export */   fetchBalance: () => (/* binding */ fetchBalance),\n/* harmony export */   fetchBlockNumber: () => (/* binding */ fetchBlockNumber),\n/* harmony export */   fetchEnsAddress: () => (/* binding */ fetchEnsAddress),\n/* harmony export */   fetchEnsAvatar: () => (/* binding */ fetchEnsAvatar),\n/* harmony export */   fetchEnsName: () => (/* binding */ fetchEnsName),\n/* harmony export */   fetchEnsResolver: () => (/* binding */ fetchEnsResolver),\n/* harmony export */   fetchFeeData: () => (/* binding */ fetchFeeData),\n/* harmony export */   fetchToken: () => (/* binding */ fetchToken),\n/* harmony export */   fetchTransaction: () => (/* binding */ fetchTransaction),\n/* harmony export */   getAccount: () => (/* binding */ getAccount),\n/* harmony export */   getCallParameters: () => (/* binding */ getCallParameters),\n/* harmony export */   getConfig: () => (/* binding */ getConfig),\n/* harmony export */   getContract: () => (/* binding */ getContract),\n/* harmony export */   getNetwork: () => (/* binding */ getNetwork),\n/* harmony export */   getPublicClient: () => (/* binding */ getPublicClient),\n/* harmony export */   getSendTransactionParameters: () => (/* binding */ getSendTransactionParameters),\n/* harmony export */   getUnit: () => (/* binding */ getUnit),\n/* harmony export */   getWalletClient: () => (/* binding */ getWalletClient),\n/* harmony export */   getWebSocketPublicClient: () => (/* binding */ getWebSocketPublicClient),\n/* harmony export */   multicall: () => (/* binding */ multicall),\n/* harmony export */   noopStorage: () => (/* binding */ noopStorage),\n/* harmony export */   prepareSendTransaction: () => (/* binding */ prepareSendTransaction),\n/* harmony export */   prepareWriteContract: () => (/* binding */ prepareWriteContract),\n/* harmony export */   readContract: () => (/* binding */ readContract),\n/* harmony export */   readContracts: () => (/* binding */ readContracts),\n/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),\n/* harmony export */   serialize: () => (/* binding */ serialize),\n/* harmony export */   signMessage: () => (/* binding */ signMessage),\n/* harmony export */   signTypedData: () => (/* binding */ signTypedData),\n/* harmony export */   switchNetwork: () => (/* binding */ switchNetwork),\n/* harmony export */   waitForTransaction: () => (/* binding */ waitForTransaction),\n/* harmony export */   watchAccount: () => (/* binding */ watchAccount),\n/* harmony export */   watchBlockNumber: () => (/* binding */ watchBlockNumber),\n/* harmony export */   watchContractEvent: () => (/* binding */ watchContractEvent),\n/* harmony export */   watchMulticall: () => (/* binding */ watchMulticall),\n/* harmony export */   watchNetwork: () => (/* binding */ watchNetwork),\n/* harmony export */   watchPendingTransactions: () => (/* binding */ watchPendingTransactions),\n/* harmony export */   watchPublicClient: () => (/* binding */ watchPublicClient),\n/* harmony export */   watchReadContract: () => (/* binding */ watchReadContract),\n/* harmony export */   watchReadContracts: () => (/* binding */ watchReadContracts),\n/* harmony export */   watchWalletClient: () => (/* binding */ watchWalletClient),\n/* harmony export */   watchWebSocketPublicClient: () => (/* binding */ watchWebSocketPublicClient),\n/* harmony export */   writeContract: () => (/* binding */ writeContract)\n/* harmony export */ });\n/* harmony import */ var _chunk_BVC4KGLQ_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-BVC4KGLQ.js */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-JTELPB65.js\");\n/* harmony import */ var _chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-MQXBDTVK.js */ \"(ssr)/./node_modules/@wagmi/core/dist/chunk-MQXBDTVK.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/fallback.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/webSocket.js\");\n/* harmony import */ var _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @wagmi/connectors */ \"(ssr)/./node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/constants/unit.js\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! zustand/middleware */ \"(ssr)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! zustand/vanilla */ \"(ssr)/./node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/unit/formatUnits.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/contract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/data/trim.js\");\n/* harmony import */ var zustand_shallow__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! zustand/shallow */ \"(ssr)/./node_modules/zustand/esm/shallow.mjs\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/unit/parseGwei.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/isAddress.js\");\n\n\n\n// src/utils/configureChains.ts\n\nfunction configureChains(defaultChains, providers, {\n  batch = { multicall: { wait: 32 } },\n  pollingInterval = 4e3,\n  rank,\n  retryCount,\n  retryDelay,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length)\n    throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [\n        ...httpUrls[chain.id] || [],\n        ...apiConfig.rpcUrls.http\n      ];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [\n          ...wsUrls[chain.id] || [],\n          ...apiConfig.rpcUrls.webSocket\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    publicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_0__.createPublicClient)({\n        batch,\n        chain: activeChain,\n        transport: (0,viem__WEBPACK_IMPORTED_MODULE_1__.fallback)(\n          chainHttpUrls.map((url) => (0,viem__WEBPACK_IMPORTED_MODULE_2__.http)(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0])\n        return void 0;\n      const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_0__.createPublicClient)({\n        batch,\n        chain: activeChain,\n        transport: (0,viem__WEBPACK_IMPORTED_MODULE_1__.fallback)(\n          chainWsUrls.map((url) => (0,viem__WEBPACK_IMPORTED_MODULE_3__.webSocket)(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\n\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(\n      `Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`\n    );\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: (data) => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: (data) => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\n\nfunction getUnit(unit) {\n  if (typeof unit === \"number\")\n    return unit;\n  if (unit === \"wei\")\n    return 0;\n  return Math.abs(viem__WEBPACK_IMPORTED_MODULE_4__.weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer((key, value_) => {\n      const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n      return replacer?.(key, value2) || value2;\n    }, circularReplacer),\n    indent ?? void 0\n  );\n}\n\n// src/config.ts\n\n\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new _chunk_BVC4KGLQ_js__WEBPACK_IMPORTED_MODULE_5__.InjectedConnector()],\n    publicClient,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketPublicClient\n  }) {\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _addEffects);\n    this.publicClients = /* @__PURE__ */ new Map();\n    this.webSocketPublicClients = /* @__PURE__ */ new Map();\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _isAutoConnecting, void 0);\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {\n      }\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(storage));\n    this.store = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_7__.createStore)(\n      (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.subscribeWithSelector)(\n        (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.persist)(\n          () => ({\n            connectors: connectors_,\n            publicClient: this.getPublicClient({ chainId }),\n            status,\n            webSocketPublicClient: this.getWebSocketPublicClient({ chainId })\n          }),\n          {\n            name: storeKey,\n            storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: state?.data?.account,\n                  chain: state?.data?.chain\n                }\n              },\n              chains: state?.chains\n            }),\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await this.connector.disconnect?.();\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if ((0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _isAutoConnecting))\n      return;\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    (0,_chunk_MQXBDTVK_js__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(this.args.storage));\n    this.setState((x) => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient({ chainId } = {}) {\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && publicClient_?.chain.id === chainId)\n      return publicClient_;\n    publicClient_ = this.publicClients.get(chainId ?? -1);\n    if (publicClient_)\n      return publicClient_;\n    const { publicClient } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({ chainId }) : publicClient;\n    this.publicClients.set(chainId ?? -1, publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      publicClient: this.getPublicClient({ chainId })\n    }));\n  }\n  getWebSocketPublicClient({ chainId } = {}) {\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && webSocketPublicClient_?.chain.id === chainId)\n      return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(chainId ?? -1);\n    if (webSocketPublicClient_)\n      return webSocketPublicClient_;\n    const { webSocketPublicClient } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({ chainId }) : webSocketPublicClient;\n    if (webSocketPublicClient_)\n      this.webSocketPublicClients.set(chainId ?? -1, webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      prevConnector?.off?.(\"change\", onChange);\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\n      prevConnector?.off?.(\"error\", onError);\n      if (!connector)\n        return;\n      connector.on?.(\"change\", onChange);\n      connector.on?.(\"disconnect\", onDisconnect);\n      connector.on?.(\"error\", onError);\n    }\n  );\n  const { publicClient, webSocketPublicClient } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient)\n    this.store.subscribe(\n      ({ data }) => data?.chain?.id,\n      (chainId) => {\n        this.setState((x) => ({\n          ...x,\n          publicClient: this.getPublicClient({ chainId }),\n          webSocketPublicClient: this.getWebSocketPublicClient({\n            chainId\n          })\n        }));\n      }\n    );\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\n      \"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\"\n    );\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({ chainId, connector }) {\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState((x) => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    config2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector)\n    await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\n\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/actions/contracts/fetchToken.ts\n\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: unit = 18\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: (0,viem__WEBPACK_IMPORTED_MODULE_9__.formatUnits)(totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof viem__WEBPACK_IMPORTED_MODULE_10__.ContractFunctionExecutionError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: (0,viem__WEBPACK_IMPORTED_MODULE_11__.hexToString)((0,viem__WEBPACK_IMPORTED_MODULE_12__.trim)(name, { dir: \"right\" })),\n        symbol: (0,viem__WEBPACK_IMPORTED_MODULE_11__.hexToString)((0,viem__WEBPACK_IMPORTED_MODULE_12__.trim)(symbol, { dir: \"right\" })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient({ chainId } = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getPublicClient({ chainId }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  const walletClient = await config2.connector?.getWalletClient?.({ chainId }) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getWebSocketPublicClient({ chainId }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\n\nfunction watchWalletClient({ chainId }, callback) {\n  const config2 = getConfig();\n  const handleChange = async ({ chainId: chainId_ }) => {\n    if (chainId && chainId_ && chainId !== chainId_)\n      return;\n    const walletClient = await getWalletClient({ chainId });\n    if (!getConfig().connector)\n      return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(\n    ({ data, connector }) => ({\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_13__.shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ webSocketPublicClient }) => webSocketPublicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId,\n  dataSuffix,\n  functionName,\n  walletClient: walletClient_,\n  ...config2\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const { result, request } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    dataSuffix,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(\n    (abiItem) => \"name\" in abiItem && abiItem.name === functionName\n  );\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\n\nfunction getContract({\n  address,\n  abi,\n  chainId,\n  walletClient\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return (0,viem__WEBPACK_IMPORTED_MODULE_15__.getContract)({\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  chainId,\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const publicClient = getPublicClient({ chainId });\n  if (!publicClient.chains)\n    throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId)\n    throw new ChainNotConfiguredError({ chainId });\n  return publicClient.multicall({\n    allowFailure: args.allowFailure ?? true,\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  account,\n  chainId,\n  abi,\n  args,\n  functionName,\n  blockNumber,\n  blockTag\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\n\nasync function readContracts({\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const { allowFailure = true } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? publicClient.chain.id;\n      return {\n        ...contracts2,\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(\n          ({ contract }) => contract\n        ),\n        blockNumber,\n        blockTag\n      })\n    );\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(\n      (contracts2) => contracts2.map(({ index }) => index)\n    );\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof viem__WEBPACK_IMPORTED_MODULE_10__.ContractFunctionExecutionError)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, blockNumber, blockTag })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return { result: result.value, status: \"success\" };\n        return { error: result.reason, result: void 0, status: \"failure\" };\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\n\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName\n}, callback) {\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch)\n      unwatch();\n    const publicClient = getWebSocketPublicClient({ chainId }) || getPublicClient({ chainId });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    watchEvent,\n    { equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_13__.shallow }\n  );\n  return () => {\n    unwatch?.();\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\n\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  if (args.listen)\n    createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (args.listen && !args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_13__.shallow\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({ chainId: config2.chainId });\n  if (!walletClient)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  if (config2.chainId)\n    assertActiveChain({ chainId: config2.chainId });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const { chainId: _, mode: __, ...args } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: config2.chainId ? { id: config2.chainId } : null\n  });\n  return { hash };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const config2 = getConfig();\n  const publicClient = getPublicClient({ chainId });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: (0,viem__WEBPACK_IMPORTED_MODULE_9__.formatUnits)(value2 ?? \"0\", getUnit(unit ?? decimals)),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof viem__WEBPACK_IMPORTED_MODULE_10__.ContractFunctionExecutionError) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: (0,viem__WEBPACK_IMPORTED_MODULE_11__.hexToString)((0,viem__WEBPACK_IMPORTED_MODULE_12__.trim)(symbol, { dir: \"right\" })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [\n    ...config2.publicClient.chains || [],\n    ...config2.chains ?? []\n  ];\n  const value = await publicClient.getBalance({ address });\n  const chain = chains.find((x) => x.id === publicClient.chain.id);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: (0,viem__WEBPACK_IMPORTED_MODULE_9__.formatUnits)(value ?? \"0\", getUnit(unit ?? 18)),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = config2.data?.chain?.id;\n  const activeChains = config2.chains ?? [];\n  const activeChain = [\n    ...config2.publicClient?.chains || [],\n    ...activeChains\n  ].find((x) => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n    rpcUrls: {\n      default: { http: [\"\"] },\n      public: { http: [\"\"] }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...config2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  message,\n  primaryType,\n  types\n}) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  const { chainId } = domain;\n  if (chainId)\n    assertActiveChain({ chainId });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const { connector } = getConfig();\n  if (!connector)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\n\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: data?.account,\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_13__.shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\n\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\n    handleChange,\n    {\n      equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_13__.shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\n\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const { normalize } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/viem\"), __webpack_require__.e(\"vendor-chunks/@adraffy\")]).then(__webpack_require__.bind(__webpack_require__, /*! viem/ens */ \"(ssr)/./node_modules/viem/_esm/ens/index.js\"));\n  const publicClient = getPublicClient({ chainId });\n  const address = await publicClient.getEnsAddress({\n    name: normalize(name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\")\n      return null;\n    return address ? (0,viem__WEBPACK_IMPORTED_MODULE_16__.getAddress)(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nasync function fetchEnsAvatar({\n  name,\n  chainId\n}) {\n  const { normalize } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/viem\"), __webpack_require__.e(\"vendor-chunks/@adraffy\")]).then(__webpack_require__.bind(__webpack_require__, /*! viem/ens */ \"(ssr)/./node_modules/viem/_esm/ens/index.js\"));\n  const publicClient = getPublicClient({ chainId });\n  const avatar = await publicClient.getEnsAvatar({ name: normalize(name) });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\n\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getEnsName({\n    address: (0,viem__WEBPACK_IMPORTED_MODULE_16__.getAddress)(address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const { normalize } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/viem\"), __webpack_require__.e(\"vendor-chunks/@adraffy\")]).then(__webpack_require__.bind(__webpack_require__, /*! viem/ens */ \"(ssr)/./node_modules/viem/_esm/ens/index.js\"));\n  const publicClient = getPublicClient({ chainId });\n  const resolver = await publicClient.getEnsResolver({ name: normalize(name) });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\n\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units = \"gwei\"\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch {\n  }\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (block?.baseFeePerGas) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = (0,viem__WEBPACK_IMPORTED_MODULE_17__.parseGwei)(\"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? (0,viem__WEBPACK_IMPORTED_MODULE_9__.formatUnits)(gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? (0,viem__WEBPACK_IMPORTED_MODULE_9__.formatUnits)(maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? (0,viem__WEBPACK_IMPORTED_MODULE_9__.formatUnits)(maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getTransaction({ hash });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\n\nasync function prepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas: gas_,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to: to_,\n  value,\n  walletClient: walletClient_\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const to = (to_ && !(0,viem__WEBPACK_IMPORTED_MODULE_18__.isAddress)(to_) ? await fetchEnsAddress({ name: to_ }) : to_) || void 0;\n  if (to && !(0,viem__WEBPACK_IMPORTED_MODULE_18__.isAddress)(to))\n    throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: gas_ ?? void 0,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...chainId ? { chainId } : {}\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) {\n  const walletClient = await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new _wagmi_connectors__WEBPACK_IMPORTED_MODULE_14__.ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({\n    ...args,\n    chain: chainId ? { id: chainId } : null\n  });\n  return { hash };\n}\n\n// src/actions/transactions/waitForTransaction.ts\n\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onReplaced,\n  timeout = 0\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = (0,viem__WEBPACK_IMPORTED_MODULE_11__.hexToString)(`0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\n\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (!args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: zustand_shallow__WEBPACK_IMPORTED_MODULE_13__.shallow\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({ chainId }) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/chunk-TSH6VVF4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/providers/public.js":
/*!***********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/providers/public.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   publicProvider: () => (/* binding */ publicProvider)\n/* harmony export */ });\n\n\n// src/providers/public.ts\nfunction publicProvider() {\n  return function(chain) {\n    if (!chain.rpcUrls.public.http[0])\n      return null;\n    return {\n      chain,\n      rpcUrls: chain.rpcUrls.public\n    };\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9wcm92aWRlcnMvcHVibGljLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBOEI7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtd2FnbWkvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9wcm92aWRlcnMvcHVibGljLmpzPzdkMDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstTVFYQkRUVksuanNcIjtcblxuLy8gc3JjL3Byb3ZpZGVycy9wdWJsaWMudHNcbmZ1bmN0aW9uIHB1YmxpY1Byb3ZpZGVyKCkge1xuICByZXR1cm4gZnVuY3Rpb24oY2hhaW4pIHtcbiAgICBpZiAoIWNoYWluLnJwY1VybHMucHVibGljLmh0dHBbMF0pXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgY2hhaW4sXG4gICAgICBycGNVcmxzOiBjaGFpbi5ycGNVcmxzLnB1YmxpY1xuICAgIH07XG4gIH07XG59XG5leHBvcnQge1xuICBwdWJsaWNQcm92aWRlclxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/providers/public.js\n");

/***/ })

};
;